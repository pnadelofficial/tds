{"nbformat": 4, "nbformat_minor": 0, "metadata": {"colab": {"name": "Linguistic and Stylistic Analysis with Stanza", "provenance": [], "collapsed_sections": []}, "kernelspec": {"name": "python3", "display_name": "Python 3"}, "language_info": {"name": "python"}, "widgets": {"application/vnd.jupyter.widget-state+json": {"f74a1c47ad094a9db2b761ff1f536768": {"model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": ["IPY_MODEL_391d6d2cc5de4c12925dbc4899413a8c", "IPY_MODEL_c7c80c1f47d34a4a9f54144164dca80c", "IPY_MODEL_d8a1e88866854c10bfb1ad4b9711bdcb"], "layout": "IPY_MODEL_ed8e4c54daec45d1957d1bbed18232c5"}}, "391d6d2cc5de4c12925dbc4899413a8c": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_68f8cca90c5d439fa2555f38a3d6b794", "placeholder": "\u200b", "style": "IPY_MODEL_10140f36d1ce4fb4a5b1110c81e80ee5", "value": "Downloading https://raw.githubusercontent.com/stanfordnlp/stanza-resources/main/resources_1.4.0.json: "}}, "c7c80c1f47d34a4a9f54144164dca80c": {"model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_b047a042e2284a3189f8e556547c2684", "max": 25998, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_7fcd4b8d283b4789b8f1e72c70ec15f6", "value": 25998}}, "d8a1e88866854c10bfb1ad4b9711bdcb": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0f2ffd2bd6fc4dc981b844e936542bf3", "placeholder": "\u200b", "style": "IPY_MODEL_eae0d16595b1489b97eb4274a1dbeec8", "value": " 154k/? [00:00&lt;00:00, 2.82MB/s]"}}, "ed8e4c54daec45d1957d1bbed18232c5": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "68f8cca90c5d439fa2555f38a3d6b794": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "10140f36d1ce4fb4a5b1110c81e80ee5": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}, "b047a042e2284a3189f8e556547c2684": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "7fcd4b8d283b4789b8f1e72c70ec15f6": {"model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": ""}}, "0f2ffd2bd6fc4dc981b844e936542bf3": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "eae0d16595b1489b97eb4274a1dbeec8": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}, "92fc6bb07c224025873662ec0588a23d": {"model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": ["IPY_MODEL_cb9e67a3775540e19c35cbcacbc8ab98", "IPY_MODEL_9db5f70b29d642b499f9c058d1b3a683", "IPY_MODEL_cb5283354121484bbbec168d2d8cb265"], "layout": "IPY_MODEL_e189a20dce7c4547a2f6d769c25c4e7d"}}, "cb9e67a3775540e19c35cbcacbc8ab98": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_e4fe2e7eab2d403a9c3c1c79cfdc7a90", "placeholder": "\u200b", "style": "IPY_MODEL_e84cfc81a6ef4d9e8f71169222671b7b", "value": "Downloading https://huggingface.co/stanfordnlp/stanza-en/resolve/v1.4.0/models/default.zip: 100%"}}, "9db5f70b29d642b499f9c058d1b3a683": {"model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_1b9e0fd30bfe4fd4b4129a16d4ee2f05", "max": 479293702, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_9725180438f64031bbaf27c7fae1f5ab", "value": 479293702}}, "cb5283354121484bbbec168d2d8cb265": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_761e72edc43445a3b222cc2e15cedc0f", "placeholder": "\u200b", "style": "IPY_MODEL_25f5d906227f4d70babb80342f0b7750", "value": " 479M/479M [00:13&lt;00:00, 24.9MB/s]"}}, "e189a20dce7c4547a2f6d769c25c4e7d": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "e4fe2e7eab2d403a9c3c1c79cfdc7a90": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "e84cfc81a6ef4d9e8f71169222671b7b": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}, "1b9e0fd30bfe4fd4b4129a16d4ee2f05": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "9725180438f64031bbaf27c7fae1f5ab": {"model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": ""}}, "761e72edc43445a3b222cc2e15cedc0f": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "25f5d906227f4d70babb80342f0b7750": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}, "4d57e3bd499446689c149f3f09bcb003": {"model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": ["IPY_MODEL_dcf749d653f2441784535539a425188c", "IPY_MODEL_df0b838f8fd54518a748fd97aa49197f", "IPY_MODEL_3aabfd3c759a47f89f2c225b62d5d980"], "layout": "IPY_MODEL_28c66859723f4f5583a6b024b3c52162"}}, "dcf749d653f2441784535539a425188c": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_ceb7a9aa91344d40aeababc1064ce611", "placeholder": "\u200b", "style": "IPY_MODEL_8b490b706b85495b8650113a9bfd498b", "value": "Downloading https://raw.githubusercontent.com/stanfordnlp/stanza-resources/main/resources_1.4.0.json: "}}, "df0b838f8fd54518a748fd97aa49197f": {"model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_be74cc1be9f6410195669c32fc2c4949", "max": 25998, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_5b7f99e7c531499eb229a077e970cb8b", "value": 25998}}, "3aabfd3c759a47f89f2c225b62d5d980": {"model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_fe7fbe14a0d84bae80a8055f2d9d3ebc", "placeholder": "\u200b", "style": "IPY_MODEL_60e3c4f578494edd82797f80ed629340", "value": " 154k/? [00:00&lt;00:00, 3.14MB/s]"}}, "28c66859723f4f5583a6b024b3c52162": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "ceb7a9aa91344d40aeababc1064ce611": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "8b490b706b85495b8650113a9bfd498b": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}, "be74cc1be9f6410195669c32fc2c4949": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "5b7f99e7c531499eb229a077e970cb8b": {"model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": ""}}, "fe7fbe14a0d84bae80a8055f2d9d3ebc": {"model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": {"_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null}}, "60e3c4f578494edd82797f80ed629340": {"model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": {"_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": ""}}}}}, "cells": [{"cell_type": "markdown", "metadata": {"id": "IatDbdg7BrYh"}, "source": ["### An Introduction to Part of Speech Tagging, Treebanks and Universial Dependencies"]}, {"cell_type": "markdown", "metadata": {"id": "NZqUimopB33G"}, "source": ["# Imports"]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "5swa7iLBp0y5", "outputId": "0e668873-b36b-423d-f2da-64f2a8c1fd85"}, "source": ["!pip install stanza\n", "\n", "import zipfile\n", "from bs4 import BeautifulSoup\n", "import stanza\n", "from stanza.utils.conll import CoNLL\n", "import pandas as pd\n", "import numpy as np"], "execution_count": 1, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n", "Collecting stanza\n", "  Downloading stanza-1.4.0-py3-none-any.whl (574 kB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 574 kB 5.1 MB/s \n", "\u001b[?25hCollecting emoji\n", "  Downloading emoji-2.0.0.tar.gz (197 kB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 197 kB 48.0 MB/s \n", "\u001b[?25hRequirement already satisfied: torch>=1.3.0 in /usr/local/lib/python3.7/dist-packages (from stanza) (1.12.1+cu113)\n", "Collecting transformers\n", "  Downloading transformers-4.21.1-py3-none-any.whl (4.7 MB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4.7 MB 27.5 MB/s \n", "\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from stanza) (1.15.0)\n", "Requirement already satisfied: protobuf in /usr/local/lib/python3.7/dist-packages (from stanza) (3.17.3)\n", "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from stanza) (1.21.6)\n", "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from stanza) (2.23.0)\n", "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from stanza) (4.64.0)\n", "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.3.0->stanza) (4.1.1)\n", "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->stanza) (2.10)\n", "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->stanza) (3.0.4)\n", "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->stanza) (1.24.3)\n", "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->stanza) (2022.6.15)\n", "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers->stanza) (4.12.0)\n", "Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers->stanza) (3.8.0)\n", "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers->stanza) (21.3)\n", "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers->stanza) (2022.6.2)\n", "Collecting tokenizers!=0.11.3,<0.13,>=0.11.1\n", "  Downloading tokenizers-0.12.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (6.6 MB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6.6 MB 26.6 MB/s \n", "\u001b[?25hCollecting huggingface-hub<1.0,>=0.1.0\n", "  Downloading huggingface_hub-0.8.1-py3-none-any.whl (101 kB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 101 kB 5.6 MB/s \n", "\u001b[?25hCollecting pyyaml>=5.1\n", "  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n", "\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 596 kB 55.7 MB/s \n", "\u001b[?25hRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers->stanza) (3.0.9)\n", "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers->stanza) (3.8.1)\n", "Building wheels for collected packages: emoji\n", "  Building wheel for emoji (setup.py) ... \u001b[?25l\u001b[?25hdone\n", "  Created wheel for emoji: filename=emoji-2.0.0-py3-none-any.whl size=193022 sha256=b9ee6596314c49c1916036469ac14e45ff873e7a939cc113e53e1841ca49b8a0\n", "  Stored in directory: /root/.cache/pip/wheels/ec/29/4d/3cfe7452ac7d8d83b1930f8a6205c3c9649b24e80f9029fc38\n", "Successfully built emoji\n", "Installing collected packages: pyyaml, tokenizers, huggingface-hub, transformers, emoji, stanza\n", "  Attempting uninstall: pyyaml\n", "    Found existing installation: PyYAML 3.13\n", "    Uninstalling PyYAML-3.13:\n", "      Successfully uninstalled PyYAML-3.13\n", "Successfully installed emoji-2.0.0 huggingface-hub-0.8.1 pyyaml-6.0 stanza-1.4.0 tokenizers-0.12.1 transformers-4.21.1\n"]}]}, {"cell_type": "markdown", "metadata": {"id": "yNH-SiA3CFXy"}, "source": ["# Text read-in and Stanza"]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "KHFsGRY192qS", "outputId": "6161c527-0926-43e6-c19b-10ecd4beffab"}, "source": ["## Get texts from my github\n", "!wget https://raw.githubusercontent.com/pnadelofficial/FallDHCourseMaterials/main/gibbon_by_paragraph.csv ## CSV of the Gibbon text divided into paragraph\n", "!wget https://raw.githubusercontent.com/pnadelofficial/FallDHCourseMaterials/main/gibbonfortm.xml ## Original XML file"], "execution_count": 2, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["--2022-08-16 01:06:59--  https://raw.githubusercontent.com/pnadelofficial/FallDHCourseMaterials/main/gibbon_by_paragraph.csv\n", "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n", "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n", "HTTP request sent, awaiting response... 200 OK\n", "Length: 6471147 (6.2M) [text/plain]\n", "Saving to: \u2018gibbon_by_paragraph.csv\u2019\n", "\n", "gibbon_by_paragraph 100%[===================>]   6.17M  --.-KB/s    in 0.08s   \n", "\n", "2022-08-16 01:07:00 (76.9 MB/s) - \u2018gibbon_by_paragraph.csv\u2019 saved [6471147/6471147]\n", "\n", "--2022-08-16 01:07:00--  https://raw.githubusercontent.com/pnadelofficial/FallDHCourseMaterials/main/gibbonfortm.xml\n", "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.109.133, 185.199.108.133, ...\n", "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.\n", "HTTP request sent, awaiting response... 200 OK\n", "Length: 10542769 (10M) [text/plain]\n", "Saving to: \u2018gibbonfortm.xml\u2019\n", "\n", "gibbonfortm.xml     100%[===================>]  10.05M  --.-KB/s    in 0.1s    \n", "\n", "2022-08-16 01:07:00 (99.4 MB/s) - \u2018gibbonfortm.xml\u2019 saved [10542769/10542769]\n", "\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/", "height": 424}, "id": "d3iPHgNwh5U1", "outputId": "c8dd5d46-456a-424a-920c-41f79b9b048d"}, "source": ["gibbon_text = pd.read_csv('/content/gibbon_by_paragraph.csv', index_col=0) ## The Decline and Fall in paragraphs\n", "gibbon_text "], "execution_count": 3, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["                                                       StringText\n", "Paragraph 1     In the second century of the Christian era, th...\n", "Paragraph 2     The principal conquests of the Romans were ach...\n", "Paragraph 3     His generals, in the early part of his reign, ...\n", "Paragraph 4     Happily for the repose of mankind, the moderat...\n", "Paragraph 5     The only accession which the Roman empire rece...\n", "...                                                           ...\n", "Paragraph 2172  The abolition at Rome of the ancient games mus...\n", "Paragraph 2173  This use of the amphitheatre was a rare, perha...\n", "Paragraph 2174  When Petrarch first gratified his eyes with a ...\n", "Paragraph 2175  But the clouds of Barbarism were gradually dis...\n", "Paragraph 2176  Of these pilgrims, and of every reader, the at...\n", "\n", "[2176 rows x 1 columns]"], "text/html": ["\n", "  <div id=\"df-4df58778-fa45-46e7-9f34-c20378c627f2\">\n", "    <div class=\"colab-df-container\">\n", "      <div>\n", "<style scoped>\n", "    .dataframe tbody tr th:only-of-type {\n", "        vertical-align: middle;\n", "    }\n", "\n", "    .dataframe tbody tr th {\n", "        vertical-align: top;\n", "    }\n", "\n", "    .dataframe thead th {\n", "        text-align: right;\n", "    }\n", "</style>\n", "<table border=\"1\" class=\"dataframe\">\n", "  <thead>\n", "    <tr style=\"text-align: right;\">\n", "      <th></th>\n", "      <th>StringText</th>\n", "    </tr>\n", "  </thead>\n", "  <tbody>\n", "    <tr>\n", "      <th>Paragraph 1</th>\n", "      <td>In the second century of the Christian era, th...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2</th>\n", "      <td>The principal conquests of the Romans were ach...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 3</th>\n", "      <td>His generals, in the early part of his reign, ...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 4</th>\n", "      <td>Happily for the repose of mankind, the moderat...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 5</th>\n", "      <td>The only accession which the Roman empire rece...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>...</th>\n", "      <td>...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2172</th>\n", "      <td>The abolition at Rome of the ancient games mus...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2173</th>\n", "      <td>This use of the amphitheatre was a rare, perha...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2174</th>\n", "      <td>When Petrarch first gratified his eyes with a ...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2175</th>\n", "      <td>But the clouds of Barbarism were gradually dis...</td>\n", "    </tr>\n", "    <tr>\n", "      <th>Paragraph 2176</th>\n", "      <td>Of these pilgrims, and of every reader, the at...</td>\n", "    </tr>\n", "  </tbody>\n", "</table>\n", "<p>2176 rows \u00d7 1 columns</p>\n", "</div>\n", "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4df58778-fa45-46e7-9f34-c20378c627f2')\"\n", "              title=\"Convert this dataframe to an interactive table.\"\n", "              style=\"display:none;\">\n", "        \n", "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n", "       width=\"24px\">\n", "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n", "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n", "  </svg>\n", "      </button>\n", "      \n", "  <style>\n", "    .colab-df-container {\n", "      display:flex;\n", "      flex-wrap:wrap;\n", "      gap: 12px;\n", "    }\n", "\n", "    .colab-df-convert {\n", "      background-color: #E8F0FE;\n", "      border: none;\n", "      border-radius: 50%;\n", "      cursor: pointer;\n", "      display: none;\n", "      fill: #1967D2;\n", "      height: 32px;\n", "      padding: 0 0 0 0;\n", "      width: 32px;\n", "    }\n", "\n", "    .colab-df-convert:hover {\n", "      background-color: #E2EBFA;\n", "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n", "      fill: #174EA6;\n", "    }\n", "\n", "    [theme=dark] .colab-df-convert {\n", "      background-color: #3B4455;\n", "      fill: #D2E3FC;\n", "    }\n", "\n", "    [theme=dark] .colab-df-convert:hover {\n", "      background-color: #434B5C;\n", "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n", "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n", "      fill: #FFFFFF;\n", "    }\n", "  </style>\n", "\n", "      <script>\n", "        const buttonEl =\n", "          document.querySelector('#df-4df58778-fa45-46e7-9f34-c20378c627f2 button.colab-df-convert');\n", "        buttonEl.style.display =\n", "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n", "\n", "        async function convertToInteractive(key) {\n", "          const element = document.querySelector('#df-4df58778-fa45-46e7-9f34-c20378c627f2');\n", "          const dataTable =\n", "            await google.colab.kernel.invokeFunction('convertToInteractive',\n", "                                                     [key], {});\n", "          if (!dataTable) return;\n", "\n", "          const docLinkHtml = 'Like what you see? Visit the ' +\n", "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n", "            + ' to learn more about interactive tables.';\n", "          element.innerHTML = '';\n", "          dataTable['output_type'] = 'display_data';\n", "          await google.colab.output.renderOutput(dataTable, element);\n", "          const docLink = document.createElement('div');\n", "          docLink.innerHTML = docLinkHtml;\n", "          element.appendChild(docLink);\n", "        }\n", "      </script>\n", "    </div>\n", "  </div>\n", "  "]}, "metadata": {}, "execution_count": 3}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/", "height": 0, "referenced_widgets": ["f74a1c47ad094a9db2b761ff1f536768", "391d6d2cc5de4c12925dbc4899413a8c", "c7c80c1f47d34a4a9f54144164dca80c", "d8a1e88866854c10bfb1ad4b9711bdcb", "ed8e4c54daec45d1957d1bbed18232c5", "68f8cca90c5d439fa2555f38a3d6b794", "10140f36d1ce4fb4a5b1110c81e80ee5", "b047a042e2284a3189f8e556547c2684", "7fcd4b8d283b4789b8f1e72c70ec15f6", "0f2ffd2bd6fc4dc981b844e936542bf3", "eae0d16595b1489b97eb4274a1dbeec8", "92fc6bb07c224025873662ec0588a23d", "cb9e67a3775540e19c35cbcacbc8ab98", "9db5f70b29d642b499f9c058d1b3a683", "cb5283354121484bbbec168d2d8cb265", "e189a20dce7c4547a2f6d769c25c4e7d", "e4fe2e7eab2d403a9c3c1c79cfdc7a90", "e84cfc81a6ef4d9e8f71169222671b7b", "1b9e0fd30bfe4fd4b4129a16d4ee2f05", "9725180438f64031bbaf27c7fae1f5ab", "761e72edc43445a3b222cc2e15cedc0f", "25f5d906227f4d70babb80342f0b7750", "4d57e3bd499446689c149f3f09bcb003", "dcf749d653f2441784535539a425188c", "df0b838f8fd54518a748fd97aa49197f", "3aabfd3c759a47f89f2c225b62d5d980", "28c66859723f4f5583a6b024b3c52162", "ceb7a9aa91344d40aeababc1064ce611", "8b490b706b85495b8650113a9bfd498b", "be74cc1be9f6410195669c32fc2c4949", "5b7f99e7c531499eb229a077e970cb8b", "fe7fbe14a0d84bae80a8055f2d9d3ebc", "60e3c4f578494edd82797f80ed629340"]}, "id": "4fjV9xC1qPa4", "outputId": "951d6833-3ce5-4495-a988-9e6c0169062d"}, "source": ["stanza.download('en')\n", "nlp = stanza.Pipeline('en', processors='tokenize,pos,lemma,depparse')"], "execution_count": 4, "outputs": [{"output_type": "display_data", "data": {"text/plain": ["Downloading https://raw.githubusercontent.com/stanfordnlp/stanza-resources/main/resources_1.4.0.json:   0%|   \u2026"], "application/vnd.jupyter.widget-view+json": {"version_major": 2, "version_minor": 0, "model_id": "f74a1c47ad094a9db2b761ff1f536768"}}, "metadata": {}}, {"output_type": "stream", "name": "stderr", "text": ["INFO:stanza:Downloading default packages for language: en (English)...\n"]}, {"output_type": "display_data", "data": {"text/plain": ["Downloading https://huggingface.co/stanfordnlp/stanza-en/resolve/v1.4.0/models/default.zip:   0%|          | 0\u2026"], "application/vnd.jupyter.widget-view+json": {"version_major": 2, "version_minor": 0, "model_id": "92fc6bb07c224025873662ec0588a23d"}}, "metadata": {}}, {"output_type": "stream", "name": "stderr", "text": ["INFO:stanza:Finished downloading models and saved to /root/stanza_resources.\n"]}, {"output_type": "display_data", "data": {"text/plain": ["Downloading https://raw.githubusercontent.com/stanfordnlp/stanza-resources/main/resources_1.4.0.json:   0%|   \u2026"], "application/vnd.jupyter.widget-view+json": {"version_major": 2, "version_minor": 0, "model_id": "4d57e3bd499446689c149f3f09bcb003"}}, "metadata": {}}, {"output_type": "stream", "name": "stderr", "text": ["INFO:stanza:Loading these models for language: en (English):\n", "========================\n", "| Processor | Package  |\n", "------------------------\n", "| tokenize  | combined |\n", "| pos       | combined |\n", "| lemma     | combined |\n", "| depparse  | combined |\n", "========================\n", "\n", "INFO:stanza:Use device: cpu\n", "INFO:stanza:Loading: tokenize\n", "INFO:stanza:Loading: pos\n", "INFO:stanza:Loading: lemma\n", "INFO:stanza:Loading: depparse\n", "INFO:stanza:Done loading processors!\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/", "height": 0}, "id": "KOZe49Xiit8h", "outputId": "1dd2be93-c0eb-4c83-cd8a-c07819c705de"}, "source": ["gibbon_text['StringText'][2]"], "execution_count": 5, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["'His generals, in the early part of his reign, attempted the reduction of Aethiopia and Arabia Felix. They marched near a thousand miles to the south of the tropic; but the heat of the climate soon repelled the invaders and protected the unwarlike natives of those sequestered regions. The northern  countries of Europe scarcely deserved the expense and labour of conquest. The forests and morasses of Germany were filled with a hardy race of barbarians, who despised life when it was separated from freedom; and though, on the first attack, they seemed to yield to the weight of the Roman power, they soon, by a signal act of despair, regained their independence, and reminded Augustus of the vicissitude of fortune. On the death of that emperor his testament was publicly read in the senate. He bequeathed, as a valuable legacy to his successors, the advice of confining the empire within those limits which nature seemed to have placed as its permanent bulwarks and boundaries; on the west the Atlantic Ocean; the Rhine and Danube on the north; the Euphrates on the east; and towards the south the sandy deserts of Arabia and Africa.'"], "application/vnd.google.colaboratory.intrinsic+json": {"type": "string"}}, "metadata": {}, "execution_count": 5}]}, {"cell_type": "code", "metadata": {"id": "9XvWB1PnjJsp"}, "source": ["doc_p2 = nlp(gibbon_text['StringText'][2])"], "execution_count": 6, "outputs": []}, {"cell_type": "markdown", "metadata": {"id": "fO9Ar6H0kpbW"}, "source": ["##  This is a 'Document' object. \n", " \n", "\n", "*   ```\n", "# doc.text\n", "    ```\n", "returns the raw text of the document\n", "\n", "*   ```\n", "# doc.sentences\n", "    ```\n", "returns each sentence of the document as Sentence objects\n", "\n", "*   ```\n", "# doc.entities\n", "    ```\n", "returns a list of named entities\n", "\n", "*   ```\n", "# doc.tokens or doc.words  \n", "    ```\n", "returns the number of tokens or words in the document\n", "\n", "\n"]}, {"cell_type": "code", "metadata": {"id": "paorW2CGjU9r", "colab": {"base_uri": "https://localhost:8080/"}, "outputId": "5fcc6ad6-dc40-43e7-ad17-9fe25bef4868"}, "source": ["doc_p2"], "execution_count": 7, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["[\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"His\",\n", "      \"lemma\": \"his\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 2,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 0,\n", "      \"end_char\": 3\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"generals\",\n", "      \"lemma\": \"general\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 12,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 4,\n", "      \"end_char\": 12\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 2,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 12,\n", "      \"end_char\": 13\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"in\",\n", "      \"lemma\": \"in\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 7,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 14,\n", "      \"end_char\": 16\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 7,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 17,\n", "      \"end_char\": 20\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"early\",\n", "      \"lemma\": \"early\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 7,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 21,\n", "      \"end_char\": 26\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"part\",\n", "      \"lemma\": \"part\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 12,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 27,\n", "      \"end_char\": 31\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 10,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 32,\n", "      \"end_char\": 34\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"his\",\n", "      \"lemma\": \"he\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 10,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 35,\n", "      \"end_char\": 38\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"reign\",\n", "      \"lemma\": \"reign\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 7,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 39,\n", "      \"end_char\": 44\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 7,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 44,\n", "      \"end_char\": 45\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"attempted\",\n", "      \"lemma\": \"attempt\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 46,\n", "      \"end_char\": 55\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 14,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 56,\n", "      \"end_char\": 59\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \"reduction\",\n", "      \"lemma\": \"reduction\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 12,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 60,\n", "      \"end_char\": 69\n", "    },\n", "    {\n", "      \"id\": 15,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 16,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 70,\n", "      \"end_char\": 72\n", "    },\n", "    {\n", "      \"id\": 16,\n", "      \"text\": \"Aethiopia\",\n", "      \"lemma\": \"Aethiopia\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 14,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 73,\n", "      \"end_char\": 82\n", "    },\n", "    {\n", "      \"id\": 17,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 18,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 83,\n", "      \"end_char\": 86\n", "    },\n", "    {\n", "      \"id\": 18,\n", "      \"text\": \"Arabia\",\n", "      \"lemma\": \"Arabia\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 16,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 87,\n", "      \"end_char\": 93\n", "    },\n", "    {\n", "      \"id\": 19,\n", "      \"text\": \"Felix\",\n", "      \"lemma\": \"Felix\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 16,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 94,\n", "      \"end_char\": 99\n", "    },\n", "    {\n", "      \"id\": 20,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 12,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 99,\n", "      \"end_char\": 100\n", "    }\n", "  ],\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"They\",\n", "      \"lemma\": \"they\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP\",\n", "      \"feats\": \"Case=Nom|Number=Plur|Person=3|PronType=Prs\",\n", "      \"head\": 2,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 101,\n", "      \"end_char\": 105\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"marched\",\n", "      \"lemma\": \"march\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 106,\n", "      \"end_char\": 113\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \"near\",\n", "      \"lemma\": \"near\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 6,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 114,\n", "      \"end_char\": 118\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"a\",\n", "      \"lemma\": \"a\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Ind|PronType=Art\",\n", "      \"head\": 5,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 119,\n", "      \"end_char\": 120\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"thousand\",\n", "      \"lemma\": \"thousand\",\n", "      \"upos\": \"NUM\",\n", "      \"xpos\": \"CD\",\n", "      \"feats\": \"NumType=Card\",\n", "      \"head\": 6,\n", "      \"deprel\": \"nummod\",\n", "      \"start_char\": 121,\n", "      \"end_char\": 129\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"miles\",\n", "      \"lemma\": \"mile\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 2,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 130,\n", "      \"end_char\": 135\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"to\",\n", "      \"lemma\": \"to\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 9,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 136,\n", "      \"end_char\": 138\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 9,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 139,\n", "      \"end_char\": 142\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"south\",\n", "      \"lemma\": \"south\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 2,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 143,\n", "      \"end_char\": 148\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 12,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 149,\n", "      \"end_char\": 151\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 12,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 152,\n", "      \"end_char\": 155\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"tropic\",\n", "      \"lemma\": \"tropic\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 9,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 156,\n", "      \"end_char\": 162\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 2,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 162,\n", "      \"end_char\": 163\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \"but\",\n", "      \"lemma\": \"but\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 21,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 164,\n", "      \"end_char\": 167\n", "    },\n", "    {\n", "      \"id\": 15,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 16,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 168,\n", "      \"end_char\": 171\n", "    },\n", "    {\n", "      \"id\": 16,\n", "      \"text\": \"heat\",\n", "      \"lemma\": \"heat\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 21,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 172,\n", "      \"end_char\": 176\n", "    },\n", "    {\n", "      \"id\": 17,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 19,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 177,\n", "      \"end_char\": 179\n", "    },\n", "    {\n", "      \"id\": 18,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 19,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 180,\n", "      \"end_char\": 183\n", "    },\n", "    {\n", "      \"id\": 19,\n", "      \"text\": \"climate\",\n", "      \"lemma\": \"climate\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 16,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 184,\n", "      \"end_char\": 191\n", "    },\n", "    {\n", "      \"id\": 20,\n", "      \"text\": \"soon\",\n", "      \"lemma\": \"soon\",\n", "      \"upos\": \"ADV\",\n", "      \"xpos\": \"RB\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 21,\n", "      \"deprel\": \"advmod\",\n", "      \"start_char\": 192,\n", "      \"end_char\": 196\n", "    },\n", "    {\n", "      \"id\": 21,\n", "      \"text\": \"repelled\",\n", "      \"lemma\": \"repel\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 2,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 197,\n", "      \"end_char\": 205\n", "    },\n", "    {\n", "      \"id\": 22,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 23,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 206,\n", "      \"end_char\": 209\n", "    },\n", "    {\n", "      \"id\": 23,\n", "      \"text\": \"invaders\",\n", "      \"lemma\": \"invader\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 21,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 210,\n", "      \"end_char\": 218\n", "    },\n", "    {\n", "      \"id\": 24,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 25,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 219,\n", "      \"end_char\": 222\n", "    },\n", "    {\n", "      \"id\": 25,\n", "      \"text\": \"protected\",\n", "      \"lemma\": \"protect\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 21,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 223,\n", "      \"end_char\": 232\n", "    },\n", "    {\n", "      \"id\": 26,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 28,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 233,\n", "      \"end_char\": 236\n", "    },\n", "    {\n", "      \"id\": 27,\n", "      \"text\": \"unwarlike\",\n", "      \"lemma\": \"unwarlike\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 28,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 237,\n", "      \"end_char\": 246\n", "    },\n", "    {\n", "      \"id\": 28,\n", "      \"text\": \"natives\",\n", "      \"lemma\": \"native\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 25,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 247,\n", "      \"end_char\": 254\n", "    },\n", "    {\n", "      \"id\": 29,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 32,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 255,\n", "      \"end_char\": 257\n", "    },\n", "    {\n", "      \"id\": 30,\n", "      \"text\": \"those\",\n", "      \"lemma\": \"that\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Number=Plur|PronType=Dem\",\n", "      \"head\": 32,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 258,\n", "      \"end_char\": 263\n", "    },\n", "    {\n", "      \"id\": 31,\n", "      \"text\": \"sequestered\",\n", "      \"lemma\": \"sequester\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBN\",\n", "      \"feats\": \"Tense=Past|VerbForm=Part\",\n", "      \"head\": 32,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 264,\n", "      \"end_char\": 275\n", "    },\n", "    {\n", "      \"id\": 32,\n", "      \"text\": \"regions\",\n", "      \"lemma\": \"region\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 28,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 276,\n", "      \"end_char\": 283\n", "    },\n", "    {\n", "      \"id\": 33,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 2,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 283,\n", "      \"end_char\": 284\n", "    }\n", "  ],\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"The\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 3,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 285,\n", "      \"end_char\": 288\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"northern\",\n", "      \"lemma\": \"northern\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 3,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 289,\n", "      \"end_char\": 297\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \"countries\",\n", "      \"lemma\": \"country\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 7,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 299,\n", "      \"end_char\": 308\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 5,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 309,\n", "      \"end_char\": 311\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"Europe\",\n", "      \"lemma\": \"Europe\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 3,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 312,\n", "      \"end_char\": 318\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"scarcely\",\n", "      \"lemma\": \"scarcely\",\n", "      \"upos\": \"ADV\",\n", "      \"xpos\": \"RB\",\n", "      \"head\": 7,\n", "      \"deprel\": \"advmod\",\n", "      \"start_char\": 319,\n", "      \"end_char\": 327\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"deserved\",\n", "      \"lemma\": \"deserve\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 328,\n", "      \"end_char\": 336\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 9,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 337,\n", "      \"end_char\": 340\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"expense\",\n", "      \"lemma\": \"expense\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 7,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 341,\n", "      \"end_char\": 348\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 11,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 349,\n", "      \"end_char\": 352\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \"labour\",\n", "      \"lemma\": \"labour\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 9,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 353,\n", "      \"end_char\": 359\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 13,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 360,\n", "      \"end_char\": 362\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \"conquest\",\n", "      \"lemma\": \"conquest\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 9,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 363,\n", "      \"end_char\": 371\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 7,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 371,\n", "      \"end_char\": 372\n", "    }\n", "  ],\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"The\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 2,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 373,\n", "      \"end_char\": 376\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"forests\",\n", "      \"lemma\": \"forest\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 8,\n", "      \"deprel\": \"nsubj:pass\",\n", "      \"start_char\": 377,\n", "      \"end_char\": 384\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 4,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 385,\n", "      \"end_char\": 388\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"morasses\",\n", "      \"lemma\": \"morass\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 2,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 389,\n", "      \"end_char\": 397\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 6,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 398,\n", "      \"end_char\": 400\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"Germany\",\n", "      \"lemma\": \"Germany\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 4,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 401,\n", "      \"end_char\": 408\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"were\",\n", "      \"lemma\": \"be\",\n", "      \"upos\": \"AUX\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 8,\n", "      \"deprel\": \"aux:pass\",\n", "      \"start_char\": 409,\n", "      \"end_char\": 413\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"filled\",\n", "      \"lemma\": \"fill\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBN\",\n", "      \"feats\": \"Tense=Past|VerbForm=Part|Voice=Pass\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 414,\n", "      \"end_char\": 420\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"with\",\n", "      \"lemma\": \"with\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 12,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 421,\n", "      \"end_char\": 425\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"a\",\n", "      \"lemma\": \"a\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Ind|PronType=Art\",\n", "      \"head\": 12,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 426,\n", "      \"end_char\": 427\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \"hardy\",\n", "      \"lemma\": \"hardy\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 12,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 428,\n", "      \"end_char\": 433\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"race\",\n", "      \"lemma\": \"race\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 8,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 434,\n", "      \"end_char\": 438\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 14,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 439,\n", "      \"end_char\": 441\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \"barbarians\",\n", "      \"lemma\": \"barbarian\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 12,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 442,\n", "      \"end_char\": 452\n", "    },\n", "    {\n", "      \"id\": 15,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 17,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 452,\n", "      \"end_char\": 453\n", "    },\n", "    {\n", "      \"id\": 16,\n", "      \"text\": \"who\",\n", "      \"lemma\": \"who\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"WP\",\n", "      \"feats\": \"PronType=Rel\",\n", "      \"head\": 17,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 454,\n", "      \"end_char\": 457\n", "    },\n", "    {\n", "      \"id\": 17,\n", "      \"text\": \"despised\",\n", "      \"lemma\": \"despise\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 12,\n", "      \"deprel\": \"acl:relcl\",\n", "      \"start_char\": 458,\n", "      \"end_char\": 466\n", "    },\n", "    {\n", "      \"id\": 18,\n", "      \"text\": \"life\",\n", "      \"lemma\": \"life\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 17,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 467,\n", "      \"end_char\": 471\n", "    },\n", "    {\n", "      \"id\": 19,\n", "      \"text\": \"when\",\n", "      \"lemma\": \"when\",\n", "      \"upos\": \"SCONJ\",\n", "      \"xpos\": \"WRB\",\n", "      \"feats\": \"PronType=Int\",\n", "      \"head\": 22,\n", "      \"deprel\": \"mark\",\n", "      \"start_char\": 472,\n", "      \"end_char\": 476\n", "    },\n", "    {\n", "      \"id\": 20,\n", "      \"text\": \"it\",\n", "      \"lemma\": \"it\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP\",\n", "      \"feats\": \"Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs\",\n", "      \"head\": 22,\n", "      \"deprel\": \"nsubj:pass\",\n", "      \"start_char\": 477,\n", "      \"end_char\": 479\n", "    },\n", "    {\n", "      \"id\": 21,\n", "      \"text\": \"was\",\n", "      \"lemma\": \"be\",\n", "      \"upos\": \"AUX\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 22,\n", "      \"deprel\": \"aux:pass\",\n", "      \"start_char\": 480,\n", "      \"end_char\": 483\n", "    },\n", "    {\n", "      \"id\": 22,\n", "      \"text\": \"separated\",\n", "      \"lemma\": \"separate\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBN\",\n", "      \"feats\": \"Tense=Past|VerbForm=Part|Voice=Pass\",\n", "      \"head\": 17,\n", "      \"deprel\": \"advcl\",\n", "      \"start_char\": 484,\n", "      \"end_char\": 493\n", "    },\n", "    {\n", "      \"id\": 23,\n", "      \"text\": \"from\",\n", "      \"lemma\": \"from\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 24,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 494,\n", "      \"end_char\": 498\n", "    },\n", "    {\n", "      \"id\": 24,\n", "      \"text\": \"freedom\",\n", "      \"lemma\": \"freedom\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 22,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 499,\n", "      \"end_char\": 506\n", "    },\n", "    {\n", "      \"id\": 25,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \":\",\n", "      \"head\": 26,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 506,\n", "      \"end_char\": 507\n", "    },\n", "    {\n", "      \"id\": 26,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 35,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 508,\n", "      \"end_char\": 511\n", "    },\n", "    {\n", "      \"id\": 27,\n", "      \"text\": \"though\",\n", "      \"lemma\": \"though\",\n", "      \"upos\": \"ADV\",\n", "      \"xpos\": \"RB\",\n", "      \"head\": 35,\n", "      \"deprel\": \"advmod\",\n", "      \"start_char\": 512,\n", "      \"end_char\": 518\n", "    },\n", "    {\n", "      \"id\": 28,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 27,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 518,\n", "      \"end_char\": 519\n", "    },\n", "    {\n", "      \"id\": 29,\n", "      \"text\": \"on\",\n", "      \"lemma\": \"on\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 32,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 520,\n", "      \"end_char\": 522\n", "    },\n", "    {\n", "      \"id\": 30,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 32,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 523,\n", "      \"end_char\": 526\n", "    },\n", "    {\n", "      \"id\": 31,\n", "      \"text\": \"first\",\n", "      \"lemma\": \"first\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos|NumType=Ord\",\n", "      \"head\": 32,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 527,\n", "      \"end_char\": 532\n", "    },\n", "    {\n", "      \"id\": 32,\n", "      \"text\": \"attack\",\n", "      \"lemma\": \"attack\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 35,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 533,\n", "      \"end_char\": 539\n", "    },\n", "    {\n", "      \"id\": 33,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 32,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 539,\n", "      \"end_char\": 540\n", "    },\n", "    {\n", "      \"id\": 34,\n", "      \"text\": \"they\",\n", "      \"lemma\": \"they\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP\",\n", "      \"feats\": \"Case=Nom|Number=Plur|Person=3|PronType=Prs\",\n", "      \"head\": 35,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 541,\n", "      \"end_char\": 545\n", "    },\n", "    {\n", "      \"id\": 35,\n", "      \"text\": \"seemed\",\n", "      \"lemma\": \"seem\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 8,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 546,\n", "      \"end_char\": 552\n", "    },\n", "    {\n", "      \"id\": 36,\n", "      \"text\": \"to\",\n", "      \"lemma\": \"to\",\n", "      \"upos\": \"PART\",\n", "      \"xpos\": \"TO\",\n", "      \"head\": 37,\n", "      \"deprel\": \"mark\",\n", "      \"start_char\": 553,\n", "      \"end_char\": 555\n", "    },\n", "    {\n", "      \"id\": 37,\n", "      \"text\": \"yield\",\n", "      \"lemma\": \"yield\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VB\",\n", "      \"feats\": \"VerbForm=Inf\",\n", "      \"head\": 35,\n", "      \"deprel\": \"xcomp\",\n", "      \"start_char\": 556,\n", "      \"end_char\": 561\n", "    },\n", "    {\n", "      \"id\": 38,\n", "      \"text\": \"to\",\n", "      \"lemma\": \"to\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 40,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 562,\n", "      \"end_char\": 564\n", "    },\n", "    {\n", "      \"id\": 39,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 40,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 565,\n", "      \"end_char\": 568\n", "    },\n", "    {\n", "      \"id\": 40,\n", "      \"text\": \"weight\",\n", "      \"lemma\": \"weight\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 37,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 569,\n", "      \"end_char\": 575\n", "    },\n", "    {\n", "      \"id\": 41,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 44,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 576,\n", "      \"end_char\": 578\n", "    },\n", "    {\n", "      \"id\": 42,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 44,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 579,\n", "      \"end_char\": 582\n", "    },\n", "    {\n", "      \"id\": 43,\n", "      \"text\": \"Roman\",\n", "      \"lemma\": \"Roman\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 44,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 583,\n", "      \"end_char\": 588\n", "    },\n", "    {\n", "      \"id\": 44,\n", "      \"text\": \"power\",\n", "      \"lemma\": \"power\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 40,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 589,\n", "      \"end_char\": 594\n", "    },\n", "    {\n", "      \"id\": 45,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 56,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 594,\n", "      \"end_char\": 595\n", "    },\n", "    {\n", "      \"id\": 46,\n", "      \"text\": \"they\",\n", "      \"lemma\": \"they\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP\",\n", "      \"feats\": \"Case=Nom|Number=Plur|Person=3|PronType=Prs\",\n", "      \"head\": 56,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 596,\n", "      \"end_char\": 600\n", "    },\n", "    {\n", "      \"id\": 47,\n", "      \"text\": \"soon\",\n", "      \"lemma\": \"soon\",\n", "      \"upos\": \"ADV\",\n", "      \"xpos\": \"RB\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 56,\n", "      \"deprel\": \"advmod\",\n", "      \"start_char\": 601,\n", "      \"end_char\": 605\n", "    },\n", "    {\n", "      \"id\": 48,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 52,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 605,\n", "      \"end_char\": 606\n", "    },\n", "    {\n", "      \"id\": 49,\n", "      \"text\": \"by\",\n", "      \"lemma\": \"by\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 52,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 607,\n", "      \"end_char\": 609\n", "    },\n", "    {\n", "      \"id\": 50,\n", "      \"text\": \"a\",\n", "      \"lemma\": \"a\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Ind|PronType=Art\",\n", "      \"head\": 52,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 610,\n", "      \"end_char\": 611\n", "    },\n", "    {\n", "      \"id\": 51,\n", "      \"text\": \"signal\",\n", "      \"lemma\": \"signal\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 52,\n", "      \"deprel\": \"compound\",\n", "      \"start_char\": 612,\n", "      \"end_char\": 618\n", "    },\n", "    {\n", "      \"id\": 52,\n", "      \"text\": \"act\",\n", "      \"lemma\": \"act\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 56,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 619,\n", "      \"end_char\": 622\n", "    },\n", "    {\n", "      \"id\": 53,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 54,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 623,\n", "      \"end_char\": 625\n", "    },\n", "    {\n", "      \"id\": 54,\n", "      \"text\": \"despair\",\n", "      \"lemma\": \"despair\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 52,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 626,\n", "      \"end_char\": 633\n", "    },\n", "    {\n", "      \"id\": 55,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 56,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 633,\n", "      \"end_char\": 634\n", "    },\n", "    {\n", "      \"id\": 56,\n", "      \"text\": \"regained\",\n", "      \"lemma\": \"regain\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 37,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 635,\n", "      \"end_char\": 643\n", "    },\n", "    {\n", "      \"id\": 57,\n", "      \"text\": \"their\",\n", "      \"lemma\": \"they\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Number=Plur|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 58,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 644,\n", "      \"end_char\": 649\n", "    },\n", "    {\n", "      \"id\": 58,\n", "      \"text\": \"independence\",\n", "      \"lemma\": \"independence\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 56,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 650,\n", "      \"end_char\": 662\n", "    },\n", "    {\n", "      \"id\": 59,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 61,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 662,\n", "      \"end_char\": 663\n", "    },\n", "    {\n", "      \"id\": 60,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 61,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 664,\n", "      \"end_char\": 667\n", "    },\n", "    {\n", "      \"id\": 61,\n", "      \"text\": \"reminded\",\n", "      \"lemma\": \"remind\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 56,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 668,\n", "      \"end_char\": 676\n", "    },\n", "    {\n", "      \"id\": 62,\n", "      \"text\": \"Augustus\",\n", "      \"lemma\": \"Augustus\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 61,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 677,\n", "      \"end_char\": 685\n", "    },\n", "    {\n", "      \"id\": 63,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 65,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 686,\n", "      \"end_char\": 688\n", "    },\n", "    {\n", "      \"id\": 64,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 65,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 689,\n", "      \"end_char\": 692\n", "    },\n", "    {\n", "      \"id\": 65,\n", "      \"text\": \"vicissitude\",\n", "      \"lemma\": \"vicissitude\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 61,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 693,\n", "      \"end_char\": 704\n", "    },\n", "    {\n", "      \"id\": 66,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 67,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 705,\n", "      \"end_char\": 707\n", "    },\n", "    {\n", "      \"id\": 67,\n", "      \"text\": \"fortune\",\n", "      \"lemma\": \"fortune\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 65,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 708,\n", "      \"end_char\": 715\n", "    },\n", "    {\n", "      \"id\": 68,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 8,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 715,\n", "      \"end_char\": 716\n", "    }\n", "  ],\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"On\",\n", "      \"lemma\": \"on\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 3,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 717,\n", "      \"end_char\": 719\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 3,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 720,\n", "      \"end_char\": 723\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \"death\",\n", "      \"lemma\": \"death\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 11,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 724,\n", "      \"end_char\": 729\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 6,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 730,\n", "      \"end_char\": 732\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"that\",\n", "      \"lemma\": \"that\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Number=Sing|PronType=Dem\",\n", "      \"head\": 6,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 733,\n", "      \"end_char\": 737\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"emperor\",\n", "      \"lemma\": \"emperor\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 3,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 738,\n", "      \"end_char\": 745\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"his\",\n", "      \"lemma\": \"he\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 8,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 746,\n", "      \"end_char\": 749\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"testament\",\n", "      \"lemma\": \"testament\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 11,\n", "      \"deprel\": \"nsubj:pass\",\n", "      \"start_char\": 750,\n", "      \"end_char\": 759\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"was\",\n", "      \"lemma\": \"be\",\n", "      \"upos\": \"AUX\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 11,\n", "      \"deprel\": \"aux:pass\",\n", "      \"start_char\": 760,\n", "      \"end_char\": 763\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"publicly\",\n", "      \"lemma\": \"publicly\",\n", "      \"upos\": \"ADV\",\n", "      \"xpos\": \"RB\",\n", "      \"head\": 11,\n", "      \"deprel\": \"advmod\",\n", "      \"start_char\": 764,\n", "      \"end_char\": 772\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \"read\",\n", "      \"lemma\": \"read\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBN\",\n", "      \"feats\": \"Tense=Past|VerbForm=Part|Voice=Pass\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 773,\n", "      \"end_char\": 777\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"in\",\n", "      \"lemma\": \"in\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 14,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 778,\n", "      \"end_char\": 780\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 14,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 781,\n", "      \"end_char\": 784\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \"senate\",\n", "      \"lemma\": \"senate\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 11,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 785,\n", "      \"end_char\": 791\n", "    },\n", "    {\n", "      \"id\": 15,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 11,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 791,\n", "      \"end_char\": 792\n", "    }\n", "  ],\n", "  [\n", "    {\n", "      \"id\": 1,\n", "      \"text\": \"He\",\n", "      \"lemma\": \"he\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP\",\n", "      \"feats\": \"Case=Nom|Gender=Masc|Number=Sing|Person=3|PronType=Prs\",\n", "      \"head\": 2,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 793,\n", "      \"end_char\": 795\n", "    },\n", "    {\n", "      \"id\": 2,\n", "      \"text\": \"bequeathed\",\n", "      \"lemma\": \"bequeath\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 0,\n", "      \"deprel\": \"root\",\n", "      \"start_char\": 796,\n", "      \"end_char\": 806\n", "    },\n", "    {\n", "      \"id\": 3,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 2,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 806,\n", "      \"end_char\": 807\n", "    },\n", "    {\n", "      \"id\": 4,\n", "      \"text\": \"as\",\n", "      \"lemma\": \"as\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 7,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 808,\n", "      \"end_char\": 810\n", "    },\n", "    {\n", "      \"id\": 5,\n", "      \"text\": \"a\",\n", "      \"lemma\": \"a\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Ind|PronType=Art\",\n", "      \"head\": 7,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 811,\n", "      \"end_char\": 812\n", "    },\n", "    {\n", "      \"id\": 6,\n", "      \"text\": \"valuable\",\n", "      \"lemma\": \"valuable\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 7,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 813,\n", "      \"end_char\": 821\n", "    },\n", "    {\n", "      \"id\": 7,\n", "      \"text\": \"legacy\",\n", "      \"lemma\": \"legacy\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 2,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 822,\n", "      \"end_char\": 828\n", "    },\n", "    {\n", "      \"id\": 8,\n", "      \"text\": \"to\",\n", "      \"lemma\": \"to\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 10,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 829,\n", "      \"end_char\": 831\n", "    },\n", "    {\n", "      \"id\": 9,\n", "      \"text\": \"his\",\n", "      \"lemma\": \"he\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 10,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 832,\n", "      \"end_char\": 835\n", "    },\n", "    {\n", "      \"id\": 10,\n", "      \"text\": \"successors\",\n", "      \"lemma\": \"successor\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 7,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 836,\n", "      \"end_char\": 846\n", "    },\n", "    {\n", "      \"id\": 11,\n", "      \"text\": \",\",\n", "      \"lemma\": \",\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \",\",\n", "      \"head\": 13,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 846,\n", "      \"end_char\": 847\n", "    },\n", "    {\n", "      \"id\": 12,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 13,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 848,\n", "      \"end_char\": 851\n", "    },\n", "    {\n", "      \"id\": 13,\n", "      \"text\": \"advice\",\n", "      \"lemma\": \"advice\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 7,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 852,\n", "      \"end_char\": 858\n", "    },\n", "    {\n", "      \"id\": 14,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"SCONJ\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 15,\n", "      \"deprel\": \"mark\",\n", "      \"start_char\": 859,\n", "      \"end_char\": 861\n", "    },\n", "    {\n", "      \"id\": 15,\n", "      \"text\": \"confining\",\n", "      \"lemma\": \"confine\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBG\",\n", "      \"feats\": \"VerbForm=Ger\",\n", "      \"head\": 13,\n", "      \"deprel\": \"acl\",\n", "      \"start_char\": 862,\n", "      \"end_char\": 871\n", "    },\n", "    {\n", "      \"id\": 16,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 17,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 872,\n", "      \"end_char\": 875\n", "    },\n", "    {\n", "      \"id\": 17,\n", "      \"text\": \"empire\",\n", "      \"lemma\": \"empire\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 15,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 876,\n", "      \"end_char\": 882\n", "    },\n", "    {\n", "      \"id\": 18,\n", "      \"text\": \"within\",\n", "      \"lemma\": \"within\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 20,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 883,\n", "      \"end_char\": 889\n", "    },\n", "    {\n", "      \"id\": 19,\n", "      \"text\": \"those\",\n", "      \"lemma\": \"that\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Number=Plur|PronType=Dem\",\n", "      \"head\": 20,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 890,\n", "      \"end_char\": 895\n", "    },\n", "    {\n", "      \"id\": 20,\n", "      \"text\": \"limits\",\n", "      \"lemma\": \"limit\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 15,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 896,\n", "      \"end_char\": 902\n", "    },\n", "    {\n", "      \"id\": 21,\n", "      \"text\": \"which\",\n", "      \"lemma\": \"which\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"WDT\",\n", "      \"feats\": \"PronType=Rel\",\n", "      \"head\": 23,\n", "      \"deprel\": \"obj\",\n", "      \"start_char\": 903,\n", "      \"end_char\": 908\n", "    },\n", "    {\n", "      \"id\": 22,\n", "      \"text\": \"nature\",\n", "      \"lemma\": \"nature\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 23,\n", "      \"deprel\": \"nsubj\",\n", "      \"start_char\": 909,\n", "      \"end_char\": 915\n", "    },\n", "    {\n", "      \"id\": 23,\n", "      \"text\": \"seemed\",\n", "      \"lemma\": \"seem\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBD\",\n", "      \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "      \"head\": 20,\n", "      \"deprel\": \"acl:relcl\",\n", "      \"start_char\": 916,\n", "      \"end_char\": 922\n", "    },\n", "    {\n", "      \"id\": 24,\n", "      \"text\": \"to\",\n", "      \"lemma\": \"to\",\n", "      \"upos\": \"PART\",\n", "      \"xpos\": \"TO\",\n", "      \"head\": 26,\n", "      \"deprel\": \"mark\",\n", "      \"start_char\": 923,\n", "      \"end_char\": 925\n", "    },\n", "    {\n", "      \"id\": 25,\n", "      \"text\": \"have\",\n", "      \"lemma\": \"have\",\n", "      \"upos\": \"AUX\",\n", "      \"xpos\": \"VB\",\n", "      \"feats\": \"VerbForm=Inf\",\n", "      \"head\": 26,\n", "      \"deprel\": \"aux\",\n", "      \"start_char\": 926,\n", "      \"end_char\": 930\n", "    },\n", "    {\n", "      \"id\": 26,\n", "      \"text\": \"placed\",\n", "      \"lemma\": \"place\",\n", "      \"upos\": \"VERB\",\n", "      \"xpos\": \"VBN\",\n", "      \"feats\": \"Tense=Past|VerbForm=Part\",\n", "      \"head\": 23,\n", "      \"deprel\": \"xcomp\",\n", "      \"start_char\": 931,\n", "      \"end_char\": 937\n", "    },\n", "    {\n", "      \"id\": 27,\n", "      \"text\": \"as\",\n", "      \"lemma\": \"as\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 30,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 938,\n", "      \"end_char\": 940\n", "    },\n", "    {\n", "      \"id\": 28,\n", "      \"text\": \"its\",\n", "      \"lemma\": \"its\",\n", "      \"upos\": \"PRON\",\n", "      \"xpos\": \"PRP$\",\n", "      \"feats\": \"Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "      \"head\": 30,\n", "      \"deprel\": \"nmod:poss\",\n", "      \"start_char\": 941,\n", "      \"end_char\": 944\n", "    },\n", "    {\n", "      \"id\": 29,\n", "      \"text\": \"permanent\",\n", "      \"lemma\": \"permanent\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 30,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 945,\n", "      \"end_char\": 954\n", "    },\n", "    {\n", "      \"id\": 30,\n", "      \"text\": \"bulwarks\",\n", "      \"lemma\": \"bulwark\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 26,\n", "      \"deprel\": \"obl\",\n", "      \"start_char\": 955,\n", "      \"end_char\": 963\n", "    },\n", "    {\n", "      \"id\": 31,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 32,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 964,\n", "      \"end_char\": 967\n", "    },\n", "    {\n", "      \"id\": 32,\n", "      \"text\": \"boundaries\",\n", "      \"lemma\": \"boundary\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 30,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 968,\n", "      \"end_char\": 978\n", "    },\n", "    {\n", "      \"id\": 33,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \":\",\n", "      \"head\": 36,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 978,\n", "      \"end_char\": 979\n", "    },\n", "    {\n", "      \"id\": 34,\n", "      \"text\": \"on\",\n", "      \"lemma\": \"on\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 36,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 980,\n", "      \"end_char\": 982\n", "    },\n", "    {\n", "      \"id\": 35,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 36,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 983,\n", "      \"end_char\": 986\n", "    },\n", "    {\n", "      \"id\": 36,\n", "      \"text\": \"west\",\n", "      \"lemma\": \"west\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 30,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 987,\n", "      \"end_char\": 991\n", "    },\n", "    {\n", "      \"id\": 37,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 39,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 992,\n", "      \"end_char\": 995\n", "    },\n", "    {\n", "      \"id\": 38,\n", "      \"text\": \"Atlantic\",\n", "      \"lemma\": \"Atlantic\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 39,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 996,\n", "      \"end_char\": 1004\n", "    },\n", "    {\n", "      \"id\": 39,\n", "      \"text\": \"Ocean\",\n", "      \"lemma\": \"Ocean\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 36,\n", "      \"deprel\": \"appos\",\n", "      \"start_char\": 1005,\n", "      \"end_char\": 1010\n", "    },\n", "    {\n", "      \"id\": 40,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \":\",\n", "      \"head\": 42,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 1010,\n", "      \"end_char\": 1011\n", "    },\n", "    {\n", "      \"id\": 41,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 42,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1012,\n", "      \"end_char\": 1015\n", "    },\n", "    {\n", "      \"id\": 42,\n", "      \"text\": \"Rhine\",\n", "      \"lemma\": \"Rhine\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 30,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 1016,\n", "      \"end_char\": 1021\n", "    },\n", "    {\n", "      \"id\": 43,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 44,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 1022,\n", "      \"end_char\": 1025\n", "    },\n", "    {\n", "      \"id\": 44,\n", "      \"text\": \"Danube\",\n", "      \"lemma\": \"Danube\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 42,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 1026,\n", "      \"end_char\": 1032\n", "    },\n", "    {\n", "      \"id\": 45,\n", "      \"text\": \"on\",\n", "      \"lemma\": \"on\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 47,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 1033,\n", "      \"end_char\": 1035\n", "    },\n", "    {\n", "      \"id\": 46,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 47,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1036,\n", "      \"end_char\": 1039\n", "    },\n", "    {\n", "      \"id\": 47,\n", "      \"text\": \"north\",\n", "      \"lemma\": \"north\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 42,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 1040,\n", "      \"end_char\": 1045\n", "    },\n", "    {\n", "      \"id\": 48,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \":\",\n", "      \"head\": 50,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 1045,\n", "      \"end_char\": 1046\n", "    },\n", "    {\n", "      \"id\": 49,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 50,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1047,\n", "      \"end_char\": 1050\n", "    },\n", "    {\n", "      \"id\": 50,\n", "      \"text\": \"Euphrates\",\n", "      \"lemma\": \"Euphrate\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNPS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 42,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 1051,\n", "      \"end_char\": 1060\n", "    },\n", "    {\n", "      \"id\": 51,\n", "      \"text\": \"on\",\n", "      \"lemma\": \"on\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 53,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 1061,\n", "      \"end_char\": 1063\n", "    },\n", "    {\n", "      \"id\": 52,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 53,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1064,\n", "      \"end_char\": 1067\n", "    },\n", "    {\n", "      \"id\": 53,\n", "      \"text\": \"east\",\n", "      \"lemma\": \"east\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 50,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 1068,\n", "      \"end_char\": 1072\n", "    },\n", "    {\n", "      \"id\": 54,\n", "      \"text\": \";\",\n", "      \"lemma\": \";\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \":\",\n", "      \"head\": 58,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 1072,\n", "      \"end_char\": 1073\n", "    },\n", "    {\n", "      \"id\": 55,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 58,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 1074,\n", "      \"end_char\": 1077\n", "    },\n", "    {\n", "      \"id\": 56,\n", "      \"text\": \"towards\",\n", "      \"lemma\": \"towards\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 58,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 1078,\n", "      \"end_char\": 1085\n", "    },\n", "    {\n", "      \"id\": 57,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 58,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1086,\n", "      \"end_char\": 1089\n", "    },\n", "    {\n", "      \"id\": 58,\n", "      \"text\": \"south\",\n", "      \"lemma\": \"south\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NN\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 50,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 1090,\n", "      \"end_char\": 1095\n", "    },\n", "    {\n", "      \"id\": 59,\n", "      \"text\": \"the\",\n", "      \"lemma\": \"the\",\n", "      \"upos\": \"DET\",\n", "      \"xpos\": \"DT\",\n", "      \"feats\": \"Definite=Def|PronType=Art\",\n", "      \"head\": 61,\n", "      \"deprel\": \"det\",\n", "      \"start_char\": 1096,\n", "      \"end_char\": 1099\n", "    },\n", "    {\n", "      \"id\": 60,\n", "      \"text\": \"sandy\",\n", "      \"lemma\": \"sandy\",\n", "      \"upos\": \"ADJ\",\n", "      \"xpos\": \"JJ\",\n", "      \"feats\": \"Degree=Pos\",\n", "      \"head\": 61,\n", "      \"deprel\": \"amod\",\n", "      \"start_char\": 1100,\n", "      \"end_char\": 1105\n", "    },\n", "    {\n", "      \"id\": 61,\n", "      \"text\": \"deserts\",\n", "      \"lemma\": \"desert\",\n", "      \"upos\": \"NOUN\",\n", "      \"xpos\": \"NNS\",\n", "      \"feats\": \"Number=Plur\",\n", "      \"head\": 58,\n", "      \"deprel\": \"appos\",\n", "      \"start_char\": 1106,\n", "      \"end_char\": 1113\n", "    },\n", "    {\n", "      \"id\": 62,\n", "      \"text\": \"of\",\n", "      \"lemma\": \"of\",\n", "      \"upos\": \"ADP\",\n", "      \"xpos\": \"IN\",\n", "      \"head\": 63,\n", "      \"deprel\": \"case\",\n", "      \"start_char\": 1114,\n", "      \"end_char\": 1116\n", "    },\n", "    {\n", "      \"id\": 63,\n", "      \"text\": \"Arabia\",\n", "      \"lemma\": \"Arabia\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 61,\n", "      \"deprel\": \"nmod\",\n", "      \"start_char\": 1117,\n", "      \"end_char\": 1123\n", "    },\n", "    {\n", "      \"id\": 64,\n", "      \"text\": \"and\",\n", "      \"lemma\": \"and\",\n", "      \"upos\": \"CCONJ\",\n", "      \"xpos\": \"CC\",\n", "      \"head\": 65,\n", "      \"deprel\": \"cc\",\n", "      \"start_char\": 1124,\n", "      \"end_char\": 1127\n", "    },\n", "    {\n", "      \"id\": 65,\n", "      \"text\": \"Africa\",\n", "      \"lemma\": \"Africa\",\n", "      \"upos\": \"PROPN\",\n", "      \"xpos\": \"NNP\",\n", "      \"feats\": \"Number=Sing\",\n", "      \"head\": 63,\n", "      \"deprel\": \"conj\",\n", "      \"start_char\": 1128,\n", "      \"end_char\": 1134\n", "    },\n", "    {\n", "      \"id\": 66,\n", "      \"text\": \".\",\n", "      \"lemma\": \".\",\n", "      \"upos\": \"PUNCT\",\n", "      \"xpos\": \".\",\n", "      \"head\": 2,\n", "      \"deprel\": \"punct\",\n", "      \"start_char\": 1134,\n", "      \"end_char\": 1135\n", "    }\n", "  ]\n", "]"]}, "metadata": {}, "execution_count": 7}]}, {"cell_type": "markdown", "metadata": {"id": "4KrhUUtem0QO"}, "source": ["## This is a 'Sentence' object."]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/", "height": 0}, "id": "H68NHAXHmzrR", "outputId": "6a56344d-ea2c-4e81-ffa6-0c2842457d52"}, "source": ["first_sentence = doc_p2.sentences[0]\n", "first_sentence.text ## Again, returns the text."], "execution_count": 8, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["'His generals, in the early part of his reign, attempted the reduction of Aethiopia and Arabia Felix.'"], "application/vnd.google.colaboratory.intrinsic+json": {"type": "string"}}, "metadata": {}, "execution_count": 8}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "wx_uL7Caqn7b", "outputId": "b3841661-bd00-45d3-f264-6697ab37eed2"}, "source": ["first_word = first_sentence.words[0]\n", "first_word"], "execution_count": 9, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["{\n", "  \"id\": 1,\n", "  \"text\": \"His\",\n", "  \"lemma\": \"his\",\n", "  \"upos\": \"PRON\",\n", "  \"xpos\": \"PRP$\",\n", "  \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "  \"head\": 2,\n", "  \"deprel\": \"nmod:poss\",\n", "  \"start_char\": 0,\n", "  \"end_char\": 3\n", "}"]}, "metadata": {}, "execution_count": 9}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "fdYnAvOdsPmi", "outputId": "00d1a7dd-50a9-4249-f4d3-cb89608fc207"}, "source": ["first_token = first_sentence.tokens[0]\n", "first_token"], "execution_count": 10, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["[\n", "  {\n", "    \"id\": 1,\n", "    \"text\": \"His\",\n", "    \"lemma\": \"his\",\n", "    \"upos\": \"PRON\",\n", "    \"xpos\": \"PRP$\",\n", "    \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "    \"head\": 2,\n", "    \"deprel\": \"nmod:poss\",\n", "    \"start_char\": 0,\n", "    \"end_char\": 3\n", "  }\n", "]"]}, "metadata": {}, "execution_count": 10}]}, {"cell_type": "markdown", "metadata": {"id": "HdETIadjpCj_"}, "source": ["## This is a 'Word' object\n", "Each value represents a grammatical catagory of language. Always be aware of what language model you are using. "]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "qzzvXIynpBwV", "outputId": "6841b34a-4a97-4987-d837-dcab0c1a6979"}, "source": ["first_word.id, first_word.text, first_word.lemma ## The word's ID, the tex and the 'lemma' "], "execution_count": 11, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["(1, 'His', 'his')"]}, "metadata": {}, "execution_count": 11}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "-VtFbvPQoXn6", "outputId": "dbdb485c-f3f5-40a1-b481-39ee02b66c81"}, "source": ["## Part of Speech tagging (may see this online as just POS) for the word: UPOS\n", "print(first_word.upos) ## Return a very general part of speech description. Here, this word 'His' is identified as a pronoun.\n", "\n", "print('\\n')\n", "\n", "print(first_sentence.words[1].upos) ## Here the second word 'general' is identified as a noun. \n", "\n", "print('\\n')\n", "\n", "for word in first_sentence.words: ## In fact we can iterate through the whole list.\n", "  print(word.upos)"], "execution_count": 12, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["PRON\n", "\n", "\n", "NOUN\n", "\n", "\n", "PRON\n", "NOUN\n", "PUNCT\n", "ADP\n", "DET\n", "ADJ\n", "NOUN\n", "ADP\n", "PRON\n", "NOUN\n", "PUNCT\n", "VERB\n", "DET\n", "NOUN\n", "ADP\n", "PROPN\n", "CCONJ\n", "PROPN\n", "PROPN\n", "PUNCT\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "iyidz6q8vsEU", "outputId": "29cce9f8-0a7f-46cf-ba07-4dd45a07a08b"}, "source": ["## XPOS\n", "first_word.xpos ## Return a different form of part of speech description. Here, this word 'His' is identified as a 'PRP$'.\n", "\n", "print('\\n')\n", "\n", "## These part of speech tags provide a more detailed look at the grammatical structure. Here is a link from University of Pennsylvania \n", "## that shows what each abbreviation stands for: https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html,\n", "## and, if you are interested, here is the original paper describing the project: https://repository.upenn.edu/cgi/viewcontent.cgi?article=1603&context=cis_reports.\n", "\n", "for word in first_sentence.words:\n", "  print(word.xpos)"], "execution_count": 13, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["\n", "\n", "PRP$\n", "NNS\n", ",\n", "IN\n", "DT\n", "JJ\n", "NN\n", "IN\n", "PRP$\n", "NN\n", ",\n", "VBD\n", "DT\n", "NN\n", "IN\n", "NNP\n", "CC\n", "NNP\n", "NNP\n", ".\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "BxFX7cWTFEOP", "outputId": "a0864bf8-d4c9-497e-ef70-7fcc9cb8eb8b"}, "source": ["print(first_sentence.text)\n", "print('\\n')\n", "\n", "for word in first_sentence.words:\n", "  print(f'{word.text} ({word.lemma}):\\t{word.upos}, {word.xpos}')"], "execution_count": 14, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["His generals, in the early part of his reign, attempted the reduction of Aethiopia and Arabia Felix.\n", "\n", "\n", "His (his):\tPRON, PRP$\n", "generals (general):\tNOUN, NNS\n", ", (,):\tPUNCT, ,\n", "in (in):\tADP, IN\n", "the (the):\tDET, DT\n", "early (early):\tADJ, JJ\n", "part (part):\tNOUN, NN\n", "of (of):\tADP, IN\n", "his (he):\tPRON, PRP$\n", "reign (reign):\tNOUN, NN\n", ", (,):\tPUNCT, ,\n", "attempted (attempt):\tVERB, VBD\n", "the (the):\tDET, DT\n", "reduction (reduction):\tNOUN, NN\n", "of (of):\tADP, IN\n", "Aethiopia (Aethiopia):\tPROPN, NNP\n", "and (and):\tCCONJ, CC\n", "Arabia (Arabia):\tPROPN, NNP\n", "Felix (Felix):\tPROPN, NNP\n", ". (.):\tPUNCT, .\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "tjc0qkkwFiOz", "outputId": "39abf2de-c62e-4f23-c98b-fab62c45bc1d"}, "source": ["fifth_sentence = doc_p2.sentences[4]\n", "print(fifth_sentence.text)\n", "print('\\n')\n", "\n", "for word in fifth_sentence.words:\n", "  print(f'{word.text} ({word.lemma}):\\t{word.upos}, {word.xpos}')"], "execution_count": 15, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["On the death of that emperor his testament was publicly read in the senate.\n", "\n", "\n", "On (on):\tADP, IN\n", "the (the):\tDET, DT\n", "death (death):\tNOUN, NN\n", "of (of):\tADP, IN\n", "that (that):\tDET, DT\n", "emperor (emperor):\tNOUN, NN\n", "his (he):\tPRON, PRP$\n", "testament (testament):\tNOUN, NN\n", "was (be):\tAUX, VBD\n", "publicly (publicly):\tADV, RB\n", "read (read):\tVERB, VBN\n", "in (in):\tADP, IN\n", "the (the):\tDET, DT\n", "senate (senate):\tNOUN, NN\n", ". (.):\tPUNCT, .\n"]}]}, {"cell_type": "code", "metadata": {"id": "fGFLKCugF-ah"}, "source": ["## searching using a lemma and xpos\n", "for sentence in doc_p2.sentences:\n", "  for word in sentence.words:\n", "    if (word.lemma == 'be') and (word.xpos == 'VB'):\n", "      print((word, sentence.text)) "], "execution_count": 16, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "8MCXdNWtIeq2", "outputId": "3c6d0269-7dd1-43b9-d0fb-4b014ca4bc8a"}, "source": ["## compare to above\n", "for sentence in doc_p2.sentences:\n", "  for word in sentence.words:\n", "    if (word.lemma == 'be') and (word.xpos == 'VBD'):\n", "      print((word, sentence.text)) "], "execution_count": 17, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["({\n", "  \"id\": 7,\n", "  \"text\": \"were\",\n", "  \"lemma\": \"be\",\n", "  \"upos\": \"AUX\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 8,\n", "  \"deprel\": \"aux:pass\",\n", "  \"start_char\": 409,\n", "  \"end_char\": 413\n", "}, 'The forests and morasses of Germany were filled with a hardy race of barbarians, who despised life when it was separated from freedom; and though, on the first attack, they seemed to yield to the weight of the Roman power, they soon, by a signal act of despair, regained their independence, and reminded Augustus of the vicissitude of fortune.')\n", "({\n", "  \"id\": 21,\n", "  \"text\": \"was\",\n", "  \"lemma\": \"be\",\n", "  \"upos\": \"AUX\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 22,\n", "  \"deprel\": \"aux:pass\",\n", "  \"start_char\": 480,\n", "  \"end_char\": 483\n", "}, 'The forests and morasses of Germany were filled with a hardy race of barbarians, who despised life when it was separated from freedom; and though, on the first attack, they seemed to yield to the weight of the Roman power, they soon, by a signal act of despair, regained their independence, and reminded Augustus of the vicissitude of fortune.')\n", "({\n", "  \"id\": 9,\n", "  \"text\": \"was\",\n", "  \"lemma\": \"be\",\n", "  \"upos\": \"AUX\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 11,\n", "  \"deprel\": \"aux:pass\",\n", "  \"start_char\": 760,\n", "  \"end_char\": 763\n", "}, 'On the death of that emperor his testament was publicly read in the senate.')\n"]}]}, {"cell_type": "markdown", "metadata": {"id": "qP_NebJb8Obi"}, "source": ["## An introduction to Universal Dependencies"]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "nSpiFv5ixm-g", "outputId": "77787d6d-7e61-486c-b36e-049f47770795"}, "source": ["## Dependency Relation or .deprel\n", "print(first_word.deprel) ## Return a Universal Dependency part of speech description. Here, this word 'His' is identified as a 'nmod:poss'.\n", "\n", "## This means it is a nominal modifier and possessive. These Universal Dependency tags correspond with agreed upon categories for parsing\n", "## grammatical structure in text. Look into the English Universal Dependency documentation: https://universaldependencies.org/en/dep/index.html.\n", "## The greatest value of Universal Dependency is that they express detail about the word as well as about the word which it modifies, its so called 'head'.\n", "## We can vizualize the sentence as a tree of modifications.\n", "\n", "## Stanza's 'depparse' module creates a dependency tree for each sentence in the Document object. This task\n", "## is trained on thousands of handmade and verified treebanks. From this data, this model can generate\n", "## its own treebanks. "], "execution_count": 18, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["nmod:poss\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "qT6KMDrXdjhH", "outputId": "e5e8a2e2-81aa-4cf4-fbd2-d8ce4be4e7f8"}, "source": ["## .head will give us the index position of the word which our current word directly modifies\n", "print(first_sentence.text)\n", "print('\\n')\n", "\n", "for word in first_sentence.words:\n", "  print(f'{word.text} ({word.deprel}, {word.id}):\\t {first_sentence.words[word.head-1].text} ({word.head})')"], "execution_count": 19, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["His generals, in the early part of his reign, attempted the reduction of Aethiopia and Arabia Felix.\n", "\n", "\n", "His (nmod:poss, 1):\t generals (2)\n", "generals (nsubj, 2):\t attempted (12)\n", ", (punct, 3):\t generals (2)\n", "in (case, 4):\t part (7)\n", "the (det, 5):\t part (7)\n", "early (amod, 6):\t part (7)\n", "part (obl, 7):\t attempted (12)\n", "of (case, 8):\t reign (10)\n", "his (nmod:poss, 9):\t reign (10)\n", "reign (nmod, 10):\t part (7)\n", ", (punct, 11):\t part (7)\n", "attempted (root, 12):\t . (0)\n", "the (det, 13):\t reduction (14)\n", "reduction (obj, 14):\t attempted (12)\n", "of (case, 15):\t Aethiopia (16)\n", "Aethiopia (nmod, 16):\t reduction (14)\n", "and (cc, 17):\t Arabia (18)\n", "Arabia (conj, 18):\t Aethiopia (16)\n", "Felix (conj, 19):\t Aethiopia (16)\n", ". (punct, 20):\t attempted (12)\n"]}]}, {"cell_type": "code", "metadata": {"id": "5Xm_urro8BIU"}, "source": ["## The main verb of the sentence is general the root, although it can vary language to language. \n", "## In English, for instance, the root of a sentence containing the verb 'to be' changes depending on usage.       "], "execution_count": 20, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "OZafOKAjcsLB", "outputId": "6fc1fc5f-0642-4eae-bb28-9ba0e7878d30"}, "source": ["## With universal dependencies, we can search for words with certain \n", "## modifiers or that are modifying other words\n", "\n", "## Find what word directly modify the verb\n", "for word in first_sentence.words:\n", "  if first_sentence.words[word.head-1].deprel == 'nsubj':\n", "    print(word.text, word.upos)\n", "\n", "## Try this out by changing 'root' to another tag."], "execution_count": 21, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["His PRON\n", ", PUNCT\n"]}]}, {"cell_type": "code", "metadata": {"id": "wnfAyfxMf51t"}, "source": ["def findRootDep(stanza_doc):\n", "  \n", "  for sentence in stanza_doc.sentences:\n", "    for word in sentence.words:\n", "      if (sentence.words[word.head-1].deprel == 'root') and (word.upos != 'PUNCT'):\n", "        print(word.text, word.upos)\n", "    print(sentence.words[word.head-1].text, sentence.words[word.head-1].upos)\n", "    print('\\n')"], "execution_count": 22, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "SfPkPjeBgker", "outputId": "1d0ff0a7-ebee-4a17-f3b4-3157ac490ebf"}, "source": ["findRootDep(doc_p2)"], "execution_count": 23, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["generals NOUN\n", "part NOUN\n", "reduction NOUN\n", "attempted VERB\n", "\n", "\n", "They PRON\n", "miles NOUN\n", "south NOUN\n", "repelled VERB\n", "marched VERB\n", "\n", "\n", "countries NOUN\n", "scarcely ADV\n", "expense NOUN\n", "deserved VERB\n", "\n", "\n", "forests NOUN\n", "were AUX\n", "race NOUN\n", "seemed VERB\n", "filled VERB\n", "\n", "\n", "death NOUN\n", "testament NOUN\n", "was AUX\n", "publicly ADV\n", "senate NOUN\n", "read VERB\n", "\n", "\n", "He PRON\n", "legacy NOUN\n", "bequeathed VERB\n", "\n", "\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "hVv6WVjUiM5Q", "outputId": "938099e7-4e90-4adc-9227-33b85ee2d005"}, "source": ["## We can also go the other way, that is from modified word to the word that modifies it\n", "\n", "for word in first_sentence.words:\n", "  if (first_sentence.words[word.head-1].deprel != 'root') and (word.upos != 'PUNCT'):\n", "    print((word.text, first_sentence.words[word.head-1].text))"], "execution_count": 24, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["('His', 'generals')\n", "('in', 'part')\n", "('the', 'part')\n", "('early', 'part')\n", "('of', 'reign')\n", "('his', 'reign')\n", "('reign', 'part')\n", "('attempted', '.')\n", "('the', 'reduction')\n", "('of', 'Aethiopia')\n", "('Aethiopia', 'reduction')\n", "('and', 'Arabia')\n", "('Arabia', 'Aethiopia')\n", "('Felix', 'Aethiopia')\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "fkWE3VCZniuh", "outputId": "36482502-0fb2-4ae9-c521-6a3b48a4b6f9"}, "source": ["first_sentence.dependencies ##displays the sentence as a grammatical 'tree'. Let's exlore what that means."], "execution_count": 25, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["[({\n", "    \"id\": 2,\n", "    \"text\": \"generals\",\n", "    \"lemma\": \"general\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NNS\",\n", "    \"feats\": \"Number=Plur\",\n", "    \"head\": 12,\n", "    \"deprel\": \"nsubj\",\n", "    \"start_char\": 4,\n", "    \"end_char\": 12\n", "  }, 'nmod:poss', {\n", "    \"id\": 1,\n", "    \"text\": \"His\",\n", "    \"lemma\": \"his\",\n", "    \"upos\": \"PRON\",\n", "    \"xpos\": \"PRP$\",\n", "    \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "    \"head\": 2,\n", "    \"deprel\": \"nmod:poss\",\n", "    \"start_char\": 0,\n", "    \"end_char\": 3\n", "  }), ({\n", "    \"id\": 12,\n", "    \"text\": \"attempted\",\n", "    \"lemma\": \"attempt\",\n", "    \"upos\": \"VERB\",\n", "    \"xpos\": \"VBD\",\n", "    \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "    \"head\": 0,\n", "    \"deprel\": \"root\",\n", "    \"start_char\": 46,\n", "    \"end_char\": 55\n", "  }, 'nsubj', {\n", "    \"id\": 2,\n", "    \"text\": \"generals\",\n", "    \"lemma\": \"general\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NNS\",\n", "    \"feats\": \"Number=Plur\",\n", "    \"head\": 12,\n", "    \"deprel\": \"nsubj\",\n", "    \"start_char\": 4,\n", "    \"end_char\": 12\n", "  }), ({\n", "    \"id\": 2,\n", "    \"text\": \"generals\",\n", "    \"lemma\": \"general\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NNS\",\n", "    \"feats\": \"Number=Plur\",\n", "    \"head\": 12,\n", "    \"deprel\": \"nsubj\",\n", "    \"start_char\": 4,\n", "    \"end_char\": 12\n", "  }, 'punct', {\n", "    \"id\": 3,\n", "    \"text\": \",\",\n", "    \"lemma\": \",\",\n", "    \"upos\": \"PUNCT\",\n", "    \"xpos\": \",\",\n", "    \"head\": 2,\n", "    \"deprel\": \"punct\",\n", "    \"start_char\": 12,\n", "    \"end_char\": 13\n", "  }), ({\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }, 'case', {\n", "    \"id\": 4,\n", "    \"text\": \"in\",\n", "    \"lemma\": \"in\",\n", "    \"upos\": \"ADP\",\n", "    \"xpos\": \"IN\",\n", "    \"head\": 7,\n", "    \"deprel\": \"case\",\n", "    \"start_char\": 14,\n", "    \"end_char\": 16\n", "  }), ({\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }, 'det', {\n", "    \"id\": 5,\n", "    \"text\": \"the\",\n", "    \"lemma\": \"the\",\n", "    \"upos\": \"DET\",\n", "    \"xpos\": \"DT\",\n", "    \"feats\": \"Definite=Def|PronType=Art\",\n", "    \"head\": 7,\n", "    \"deprel\": \"det\",\n", "    \"start_char\": 17,\n", "    \"end_char\": 20\n", "  }), ({\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }, 'amod', {\n", "    \"id\": 6,\n", "    \"text\": \"early\",\n", "    \"lemma\": \"early\",\n", "    \"upos\": \"ADJ\",\n", "    \"xpos\": \"JJ\",\n", "    \"feats\": \"Degree=Pos\",\n", "    \"head\": 7,\n", "    \"deprel\": \"amod\",\n", "    \"start_char\": 21,\n", "    \"end_char\": 26\n", "  }), ({\n", "    \"id\": 12,\n", "    \"text\": \"attempted\",\n", "    \"lemma\": \"attempt\",\n", "    \"upos\": \"VERB\",\n", "    \"xpos\": \"VBD\",\n", "    \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "    \"head\": 0,\n", "    \"deprel\": \"root\",\n", "    \"start_char\": 46,\n", "    \"end_char\": 55\n", "  }, 'obl', {\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }), ({\n", "    \"id\": 10,\n", "    \"text\": \"reign\",\n", "    \"lemma\": \"reign\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 7,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 39,\n", "    \"end_char\": 44\n", "  }, 'case', {\n", "    \"id\": 8,\n", "    \"text\": \"of\",\n", "    \"lemma\": \"of\",\n", "    \"upos\": \"ADP\",\n", "    \"xpos\": \"IN\",\n", "    \"head\": 10,\n", "    \"deprel\": \"case\",\n", "    \"start_char\": 32,\n", "    \"end_char\": 34\n", "  }), ({\n", "    \"id\": 10,\n", "    \"text\": \"reign\",\n", "    \"lemma\": \"reign\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 7,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 39,\n", "    \"end_char\": 44\n", "  }, 'nmod:poss', {\n", "    \"id\": 9,\n", "    \"text\": \"his\",\n", "    \"lemma\": \"he\",\n", "    \"upos\": \"PRON\",\n", "    \"xpos\": \"PRP$\",\n", "    \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "    \"head\": 10,\n", "    \"deprel\": \"nmod:poss\",\n", "    \"start_char\": 35,\n", "    \"end_char\": 38\n", "  }), ({\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }, 'nmod', {\n", "    \"id\": 10,\n", "    \"text\": \"reign\",\n", "    \"lemma\": \"reign\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 7,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 39,\n", "    \"end_char\": 44\n", "  }), ({\n", "    \"id\": 7,\n", "    \"text\": \"part\",\n", "    \"lemma\": \"part\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obl\",\n", "    \"start_char\": 27,\n", "    \"end_char\": 31\n", "  }, 'punct', {\n", "    \"id\": 11,\n", "    \"text\": \",\",\n", "    \"lemma\": \",\",\n", "    \"upos\": \"PUNCT\",\n", "    \"xpos\": \",\",\n", "    \"head\": 7,\n", "    \"deprel\": \"punct\",\n", "    \"start_char\": 44,\n", "    \"end_char\": 45\n", "  }), ({\n", "    \"id\": 0,\n", "    \"text\": \"ROOT\"\n", "  }, 'root', {\n", "    \"id\": 12,\n", "    \"text\": \"attempted\",\n", "    \"lemma\": \"attempt\",\n", "    \"upos\": \"VERB\",\n", "    \"xpos\": \"VBD\",\n", "    \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "    \"head\": 0,\n", "    \"deprel\": \"root\",\n", "    \"start_char\": 46,\n", "    \"end_char\": 55\n", "  }), ({\n", "    \"id\": 14,\n", "    \"text\": \"reduction\",\n", "    \"lemma\": \"reduction\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obj\",\n", "    \"start_char\": 60,\n", "    \"end_char\": 69\n", "  }, 'det', {\n", "    \"id\": 13,\n", "    \"text\": \"the\",\n", "    \"lemma\": \"the\",\n", "    \"upos\": \"DET\",\n", "    \"xpos\": \"DT\",\n", "    \"feats\": \"Definite=Def|PronType=Art\",\n", "    \"head\": 14,\n", "    \"deprel\": \"det\",\n", "    \"start_char\": 56,\n", "    \"end_char\": 59\n", "  }), ({\n", "    \"id\": 12,\n", "    \"text\": \"attempted\",\n", "    \"lemma\": \"attempt\",\n", "    \"upos\": \"VERB\",\n", "    \"xpos\": \"VBD\",\n", "    \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "    \"head\": 0,\n", "    \"deprel\": \"root\",\n", "    \"start_char\": 46,\n", "    \"end_char\": 55\n", "  }, 'obj', {\n", "    \"id\": 14,\n", "    \"text\": \"reduction\",\n", "    \"lemma\": \"reduction\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obj\",\n", "    \"start_char\": 60,\n", "    \"end_char\": 69\n", "  }), ({\n", "    \"id\": 16,\n", "    \"text\": \"Aethiopia\",\n", "    \"lemma\": \"Aethiopia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 14,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 73,\n", "    \"end_char\": 82\n", "  }, 'case', {\n", "    \"id\": 15,\n", "    \"text\": \"of\",\n", "    \"lemma\": \"of\",\n", "    \"upos\": \"ADP\",\n", "    \"xpos\": \"IN\",\n", "    \"head\": 16,\n", "    \"deprel\": \"case\",\n", "    \"start_char\": 70,\n", "    \"end_char\": 72\n", "  }), ({\n", "    \"id\": 14,\n", "    \"text\": \"reduction\",\n", "    \"lemma\": \"reduction\",\n", "    \"upos\": \"NOUN\",\n", "    \"xpos\": \"NN\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 12,\n", "    \"deprel\": \"obj\",\n", "    \"start_char\": 60,\n", "    \"end_char\": 69\n", "  }, 'nmod', {\n", "    \"id\": 16,\n", "    \"text\": \"Aethiopia\",\n", "    \"lemma\": \"Aethiopia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 14,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 73,\n", "    \"end_char\": 82\n", "  }), ({\n", "    \"id\": 18,\n", "    \"text\": \"Arabia\",\n", "    \"lemma\": \"Arabia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 16,\n", "    \"deprel\": \"conj\",\n", "    \"start_char\": 87,\n", "    \"end_char\": 93\n", "  }, 'cc', {\n", "    \"id\": 17,\n", "    \"text\": \"and\",\n", "    \"lemma\": \"and\",\n", "    \"upos\": \"CCONJ\",\n", "    \"xpos\": \"CC\",\n", "    \"head\": 18,\n", "    \"deprel\": \"cc\",\n", "    \"start_char\": 83,\n", "    \"end_char\": 86\n", "  }), ({\n", "    \"id\": 16,\n", "    \"text\": \"Aethiopia\",\n", "    \"lemma\": \"Aethiopia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 14,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 73,\n", "    \"end_char\": 82\n", "  }, 'conj', {\n", "    \"id\": 18,\n", "    \"text\": \"Arabia\",\n", "    \"lemma\": \"Arabia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 16,\n", "    \"deprel\": \"conj\",\n", "    \"start_char\": 87,\n", "    \"end_char\": 93\n", "  }), ({\n", "    \"id\": 16,\n", "    \"text\": \"Aethiopia\",\n", "    \"lemma\": \"Aethiopia\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 14,\n", "    \"deprel\": \"nmod\",\n", "    \"start_char\": 73,\n", "    \"end_char\": 82\n", "  }, 'conj', {\n", "    \"id\": 19,\n", "    \"text\": \"Felix\",\n", "    \"lemma\": \"Felix\",\n", "    \"upos\": \"PROPN\",\n", "    \"xpos\": \"NNP\",\n", "    \"feats\": \"Number=Sing\",\n", "    \"head\": 16,\n", "    \"deprel\": \"conj\",\n", "    \"start_char\": 94,\n", "    \"end_char\": 99\n", "  }), ({\n", "    \"id\": 12,\n", "    \"text\": \"attempted\",\n", "    \"lemma\": \"attempt\",\n", "    \"upos\": \"VERB\",\n", "    \"xpos\": \"VBD\",\n", "    \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "    \"head\": 0,\n", "    \"deprel\": \"root\",\n", "    \"start_char\": 46,\n", "    \"end_char\": 55\n", "  }, 'punct', {\n", "    \"id\": 20,\n", "    \"text\": \".\",\n", "    \"lemma\": \".\",\n", "    \"upos\": \"PUNCT\",\n", "    \"xpos\": \".\",\n", "    \"head\": 12,\n", "    \"deprel\": \"punct\",\n", "    \"start_char\": 99,\n", "    \"end_char\": 100\n", "  })]"]}, "metadata": {}, "execution_count": 25}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "VO1EjT3qI38W", "outputId": "b569b46c-4a00-43f7-9b2d-dfad4dec2406"}, "source": ["for dep in first_sentence.dependencies:\n", "  print(dep)\n", "  print('\\n')"], "execution_count": 26, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["({\n", "  \"id\": 2,\n", "  \"text\": \"generals\",\n", "  \"lemma\": \"general\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NNS\",\n", "  \"feats\": \"Number=Plur\",\n", "  \"head\": 12,\n", "  \"deprel\": \"nsubj\",\n", "  \"start_char\": 4,\n", "  \"end_char\": 12\n", "}, 'nmod:poss', {\n", "  \"id\": 1,\n", "  \"text\": \"His\",\n", "  \"lemma\": \"his\",\n", "  \"upos\": \"PRON\",\n", "  \"xpos\": \"PRP$\",\n", "  \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "  \"head\": 2,\n", "  \"deprel\": \"nmod:poss\",\n", "  \"start_char\": 0,\n", "  \"end_char\": 3\n", "})\n", "\n", "\n", "({\n", "  \"id\": 12,\n", "  \"text\": \"attempted\",\n", "  \"lemma\": \"attempt\",\n", "  \"upos\": \"VERB\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 0,\n", "  \"deprel\": \"root\",\n", "  \"start_char\": 46,\n", "  \"end_char\": 55\n", "}, 'nsubj', {\n", "  \"id\": 2,\n", "  \"text\": \"generals\",\n", "  \"lemma\": \"general\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NNS\",\n", "  \"feats\": \"Number=Plur\",\n", "  \"head\": 12,\n", "  \"deprel\": \"nsubj\",\n", "  \"start_char\": 4,\n", "  \"end_char\": 12\n", "})\n", "\n", "\n", "({\n", "  \"id\": 2,\n", "  \"text\": \"generals\",\n", "  \"lemma\": \"general\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NNS\",\n", "  \"feats\": \"Number=Plur\",\n", "  \"head\": 12,\n", "  \"deprel\": \"nsubj\",\n", "  \"start_char\": 4,\n", "  \"end_char\": 12\n", "}, 'punct', {\n", "  \"id\": 3,\n", "  \"text\": \",\",\n", "  \"lemma\": \",\",\n", "  \"upos\": \"PUNCT\",\n", "  \"xpos\": \",\",\n", "  \"head\": 2,\n", "  \"deprel\": \"punct\",\n", "  \"start_char\": 12,\n", "  \"end_char\": 13\n", "})\n", "\n", "\n", "({\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "}, 'case', {\n", "  \"id\": 4,\n", "  \"text\": \"in\",\n", "  \"lemma\": \"in\",\n", "  \"upos\": \"ADP\",\n", "  \"xpos\": \"IN\",\n", "  \"head\": 7,\n", "  \"deprel\": \"case\",\n", "  \"start_char\": 14,\n", "  \"end_char\": 16\n", "})\n", "\n", "\n", "({\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "}, 'det', {\n", "  \"id\": 5,\n", "  \"text\": \"the\",\n", "  \"lemma\": \"the\",\n", "  \"upos\": \"DET\",\n", "  \"xpos\": \"DT\",\n", "  \"feats\": \"Definite=Def|PronType=Art\",\n", "  \"head\": 7,\n", "  \"deprel\": \"det\",\n", "  \"start_char\": 17,\n", "  \"end_char\": 20\n", "})\n", "\n", "\n", "({\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "}, 'amod', {\n", "  \"id\": 6,\n", "  \"text\": \"early\",\n", "  \"lemma\": \"early\",\n", "  \"upos\": \"ADJ\",\n", "  \"xpos\": \"JJ\",\n", "  \"feats\": \"Degree=Pos\",\n", "  \"head\": 7,\n", "  \"deprel\": \"amod\",\n", "  \"start_char\": 21,\n", "  \"end_char\": 26\n", "})\n", "\n", "\n", "({\n", "  \"id\": 12,\n", "  \"text\": \"attempted\",\n", "  \"lemma\": \"attempt\",\n", "  \"upos\": \"VERB\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 0,\n", "  \"deprel\": \"root\",\n", "  \"start_char\": 46,\n", "  \"end_char\": 55\n", "}, 'obl', {\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "})\n", "\n", "\n", "({\n", "  \"id\": 10,\n", "  \"text\": \"reign\",\n", "  \"lemma\": \"reign\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 7,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 39,\n", "  \"end_char\": 44\n", "}, 'case', {\n", "  \"id\": 8,\n", "  \"text\": \"of\",\n", "  \"lemma\": \"of\",\n", "  \"upos\": \"ADP\",\n", "  \"xpos\": \"IN\",\n", "  \"head\": 10,\n", "  \"deprel\": \"case\",\n", "  \"start_char\": 32,\n", "  \"end_char\": 34\n", "})\n", "\n", "\n", "({\n", "  \"id\": 10,\n", "  \"text\": \"reign\",\n", "  \"lemma\": \"reign\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 7,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 39,\n", "  \"end_char\": 44\n", "}, 'nmod:poss', {\n", "  \"id\": 9,\n", "  \"text\": \"his\",\n", "  \"lemma\": \"he\",\n", "  \"upos\": \"PRON\",\n", "  \"xpos\": \"PRP$\",\n", "  \"feats\": \"Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs\",\n", "  \"head\": 10,\n", "  \"deprel\": \"nmod:poss\",\n", "  \"start_char\": 35,\n", "  \"end_char\": 38\n", "})\n", "\n", "\n", "({\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "}, 'nmod', {\n", "  \"id\": 10,\n", "  \"text\": \"reign\",\n", "  \"lemma\": \"reign\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 7,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 39,\n", "  \"end_char\": 44\n", "})\n", "\n", "\n", "({\n", "  \"id\": 7,\n", "  \"text\": \"part\",\n", "  \"lemma\": \"part\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obl\",\n", "  \"start_char\": 27,\n", "  \"end_char\": 31\n", "}, 'punct', {\n", "  \"id\": 11,\n", "  \"text\": \",\",\n", "  \"lemma\": \",\",\n", "  \"upos\": \"PUNCT\",\n", "  \"xpos\": \",\",\n", "  \"head\": 7,\n", "  \"deprel\": \"punct\",\n", "  \"start_char\": 44,\n", "  \"end_char\": 45\n", "})\n", "\n", "\n", "({\n", "  \"id\": 0,\n", "  \"text\": \"ROOT\"\n", "}, 'root', {\n", "  \"id\": 12,\n", "  \"text\": \"attempted\",\n", "  \"lemma\": \"attempt\",\n", "  \"upos\": \"VERB\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 0,\n", "  \"deprel\": \"root\",\n", "  \"start_char\": 46,\n", "  \"end_char\": 55\n", "})\n", "\n", "\n", "({\n", "  \"id\": 14,\n", "  \"text\": \"reduction\",\n", "  \"lemma\": \"reduction\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obj\",\n", "  \"start_char\": 60,\n", "  \"end_char\": 69\n", "}, 'det', {\n", "  \"id\": 13,\n", "  \"text\": \"the\",\n", "  \"lemma\": \"the\",\n", "  \"upos\": \"DET\",\n", "  \"xpos\": \"DT\",\n", "  \"feats\": \"Definite=Def|PronType=Art\",\n", "  \"head\": 14,\n", "  \"deprel\": \"det\",\n", "  \"start_char\": 56,\n", "  \"end_char\": 59\n", "})\n", "\n", "\n", "({\n", "  \"id\": 12,\n", "  \"text\": \"attempted\",\n", "  \"lemma\": \"attempt\",\n", "  \"upos\": \"VERB\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 0,\n", "  \"deprel\": \"root\",\n", "  \"start_char\": 46,\n", "  \"end_char\": 55\n", "}, 'obj', {\n", "  \"id\": 14,\n", "  \"text\": \"reduction\",\n", "  \"lemma\": \"reduction\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obj\",\n", "  \"start_char\": 60,\n", "  \"end_char\": 69\n", "})\n", "\n", "\n", "({\n", "  \"id\": 16,\n", "  \"text\": \"Aethiopia\",\n", "  \"lemma\": \"Aethiopia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 14,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 73,\n", "  \"end_char\": 82\n", "}, 'case', {\n", "  \"id\": 15,\n", "  \"text\": \"of\",\n", "  \"lemma\": \"of\",\n", "  \"upos\": \"ADP\",\n", "  \"xpos\": \"IN\",\n", "  \"head\": 16,\n", "  \"deprel\": \"case\",\n", "  \"start_char\": 70,\n", "  \"end_char\": 72\n", "})\n", "\n", "\n", "({\n", "  \"id\": 14,\n", "  \"text\": \"reduction\",\n", "  \"lemma\": \"reduction\",\n", "  \"upos\": \"NOUN\",\n", "  \"xpos\": \"NN\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 12,\n", "  \"deprel\": \"obj\",\n", "  \"start_char\": 60,\n", "  \"end_char\": 69\n", "}, 'nmod', {\n", "  \"id\": 16,\n", "  \"text\": \"Aethiopia\",\n", "  \"lemma\": \"Aethiopia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 14,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 73,\n", "  \"end_char\": 82\n", "})\n", "\n", "\n", "({\n", "  \"id\": 18,\n", "  \"text\": \"Arabia\",\n", "  \"lemma\": \"Arabia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 16,\n", "  \"deprel\": \"conj\",\n", "  \"start_char\": 87,\n", "  \"end_char\": 93\n", "}, 'cc', {\n", "  \"id\": 17,\n", "  \"text\": \"and\",\n", "  \"lemma\": \"and\",\n", "  \"upos\": \"CCONJ\",\n", "  \"xpos\": \"CC\",\n", "  \"head\": 18,\n", "  \"deprel\": \"cc\",\n", "  \"start_char\": 83,\n", "  \"end_char\": 86\n", "})\n", "\n", "\n", "({\n", "  \"id\": 16,\n", "  \"text\": \"Aethiopia\",\n", "  \"lemma\": \"Aethiopia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 14,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 73,\n", "  \"end_char\": 82\n", "}, 'conj', {\n", "  \"id\": 18,\n", "  \"text\": \"Arabia\",\n", "  \"lemma\": \"Arabia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 16,\n", "  \"deprel\": \"conj\",\n", "  \"start_char\": 87,\n", "  \"end_char\": 93\n", "})\n", "\n", "\n", "({\n", "  \"id\": 16,\n", "  \"text\": \"Aethiopia\",\n", "  \"lemma\": \"Aethiopia\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 14,\n", "  \"deprel\": \"nmod\",\n", "  \"start_char\": 73,\n", "  \"end_char\": 82\n", "}, 'conj', {\n", "  \"id\": 19,\n", "  \"text\": \"Felix\",\n", "  \"lemma\": \"Felix\",\n", "  \"upos\": \"PROPN\",\n", "  \"xpos\": \"NNP\",\n", "  \"feats\": \"Number=Sing\",\n", "  \"head\": 16,\n", "  \"deprel\": \"conj\",\n", "  \"start_char\": 94,\n", "  \"end_char\": 99\n", "})\n", "\n", "\n", "({\n", "  \"id\": 12,\n", "  \"text\": \"attempted\",\n", "  \"lemma\": \"attempt\",\n", "  \"upos\": \"VERB\",\n", "  \"xpos\": \"VBD\",\n", "  \"feats\": \"Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\",\n", "  \"head\": 0,\n", "  \"deprel\": \"root\",\n", "  \"start_char\": 46,\n", "  \"end_char\": 55\n", "}, 'punct', {\n", "  \"id\": 20,\n", "  \"text\": \".\",\n", "  \"lemma\": \".\",\n", "  \"upos\": \"PUNCT\",\n", "  \"xpos\": \".\",\n", "  \"head\": 12,\n", "  \"deprel\": \"punct\",\n", "  \"start_char\": 99,\n", "  \"end_char\": 100\n", "})\n", "\n", "\n"]}]}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "GjcUP5ucJJ6L", "outputId": "1c545fd9-6388-4384-b73a-c65a63ed186b"}, "source": ["## As above, can we find all of the passive verbs? \n", "\n", "for dep in first_sentence.dependencies:\n", "  if (dep[1] == 'nmod:poss'):\n", "    for word in dep:\n", "      if type(word) != str:\n", "        print(word.text)\n", "    print('\\n')"], "execution_count": 27, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["generals\n", "His\n", "\n", "\n", "reign\n", "his\n", "\n", "\n"]}]}, {"cell_type": "code", "metadata": {"id": "2WgfWKe2MJ8W"}, "source": ["## This analysis is very scalable but always be sure to understand what your Document object is.\n", "## Here, I have moved up a rung and taken a whole chapter as my Document.\n", "\n", "gibbon = open('/content/gibbonfortm.xml')\n", "soup_chapter = BeautifulSoup(gibbon, 'lxml')## This is the same code as what I showed you on 10/13.\n", "\n", "chapter_dict = {}\n", "\n", "for i in range(len(soup_chapter.find_all('div', attrs={\"type\": \"textpart\", \"subtype\": \"chaptertext\"}))):\n", "  chapter_dict[f\"Chapter {i+1}\"] = soup_chapter.find_all('div', attrs={\"type\": \"textpart\", \"subtype\": \"chaptertext\"})[i].get_text()"], "execution_count": 28, "outputs": []}, {"cell_type": "code", "metadata": {"id": "672JhL6wNw8v"}, "source": ["doc_ch_1 = nlp(chapter_dict['Chapter 1']) ## This line will take the longest, as we must convert the string text to a Stanza doc, not more than a couple minutes though."], "execution_count": 29, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "vpj4zpx7NtVg", "outputId": "0f607bb7-c4f0-44f5-c4d5-74326aa495b3"}, "source": ["## Let's look at all of the proper nouns that are modified by adjectives.\n", "## We will return to this example when we discuss sentiment analysis.\n", "\n", "for sentence in doc_ch_1.sentences:\n", "  for word in sentence.words:\n", "    if (sentence.words[word.head-1].xpos == 'NNP') and (word.xpos == 'JJ'): ## NNP are all proper nouns; JJ is all adjectives\n", "        print((word.text, sentence.words[word.head-1].text))"], "execution_count": 30, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["('virtuous', 'Agricola')\n", "('modern', 'Europe')\n", "('other', 'Adriatic')\n", "('ancient', 'Baetica')\n", "('Ancient', 'Gaul')\n", "('modern', 'France')\n", "('ancient', 'Greece')\n", "('Roman', 'Asia')\n", "('genuine', 'Mauritania')\n", "('infamous', 'Sall\u00e8')\n"]}]}, {"cell_type": "code", "metadata": {"id": "0UUnETOqdkD7"}, "source": ["def getProperNounChunk(doc):\n", "  bigram_list = []\n", "\n", "  for sentence in doc.sentences:\n", "    for word in sentence.words:\n", "      if (sentence.words[word.head-1].xpos == 'NNP') and (word.xpos == 'JJ'):\n", "        bigram_list.append((word.text, sentence.words[word.head-1].text))\n", "  return bigram_list"], "execution_count": 31, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "sBSWwjMhN-w_", "outputId": "5f499e0d-9b6e-4b7b-c9c3-b52f280c4e2b"}, "source": ["doc_ch_71 = nlp(chapter_dict['Chapter 71'])\n", "getProperNounChunk(doc_ch_71)"], "execution_count": 32, "outputs": [{"output_type": "execute_result", "data": {"text/plain": ["[('ancient', 'Rome'),\n", " ('Fifth', 'Martin'),\n", " ('noble', 'Annibaldi'),\n", " ('venerable', 'Bede'),\n", " ('fair', 'Jacova'),\n", " ('ancient', 'Rome')]"]}, "metadata": {}, "execution_count": 32}]}, {"cell_type": "code", "metadata": {"id": "uWWOR--EeDAW"}, "source": ["for bigram in first_sentence.dependencies: ## We can use dependenies to search for Word objects.\n", "  for dep in bigram:\n", "    if (type(dep) != str) and (dep.text == 'principal'):\n", "      print(dep.text,first_sentence.words[dep.head-1].text)    "], "execution_count": 33, "outputs": []}, {"cell_type": "markdown", "metadata": {"id": "g-Z5t9LttAGq"}, "source": ["## Let's Brainstorm some grammatical units that we would want to isolate. \n", "(some ideas) \n", "\n", "*   Noun chunks\n", "*   Prepositional phrase\n", "\n"]}, {"cell_type": "markdown", "metadata": {"id": "cuspjdKaKL1e"}, "source": ["# Bigram comparison"]}, {"cell_type": "code", "metadata": {"id": "7eUbCVR1eDIp"}, "source": ["def findBigrams(doc, search_word):\n", "  bigram_dict = {}\n", "  bigram_list = []\n", "\n", "  for sentence in doc.sentences:  \n", "    for bigram in sentence.dependencies:\n", "      for dep in bigram:\n", "        if (type(dep) != str) and (dep.text == search_word):\n", "          bigram_list.append((bigram[0].text,bigram[2].text))\n", "\n", "  for bigram in bigram_list:\n", "    if bigram in bigram_dict:\n", "      bigram_dict[bigram] = bigram_dict[bigram] + 1\n", "    else:\n", "      bigram_dict[bigram] = 1\n", "\n", "  return bigram_dict, bigram_list    "], "execution_count": 34, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "yTFdmxa749px", "outputId": "c405ff1d-f554-430d-a38c-aeb356c436fe"}, "source": ["!wget https://raw.githubusercontent.com/gregorycrane/DHFall2021/master/texts/hume/hume-all.txt"], "execution_count": 35, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["--2022-08-16 01:08:51--  https://raw.githubusercontent.com/gregorycrane/DHFall2021/master/texts/hume/hume-all.txt\n", "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n", "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n", "HTTP request sent, awaiting response... 200 OK\n", "Length: 6894911 (6.6M) [text/plain]\n", "Saving to: \u2018hume-all.txt\u2019\n", "\n", "hume-all.txt        100%[===================>]   6.58M  --.-KB/s    in 0.09s   \n", "\n", "2022-08-16 01:08:52 (69.8 MB/s) - \u2018hume-all.txt\u2019 saved [6894911/6894911]\n", "\n"]}]}, {"cell_type": "code", "metadata": {"id": "uHWnWo3r5JzM"}, "source": ["# hume_full = open('/content/hume-all.txt')\n", "# hume = [] \n", "\n", "# for line in hume_full:\n", "#   for word in line.replace('.', ' ').replace(',', ' ').split(' '):\n", "#     if len(hume) <= 1000000:\n", "#       hume.append(word) \n", "\n", "# hume_string = ' '.join(hume)\n", "\n", "# hume_doc = nlp(hume_string) ## Will take 28 minutes\n", "# CoNLL.write_doc2conll(hume_doc, \"hume_output.conllu\") ## exports data so we don't needto run this cell everytime"], "execution_count": 36, "outputs": []}, {"cell_type": "code", "metadata": {"colab": {"base_uri": "https://localhost:8080/"}, "id": "QMUhP3JtgrQw", "outputId": "eef5b46c-ca06-4c73-8d9b-126bc2206e40"}, "source": ["!git clone https://github.com/pnadelofficial/FallDHCourseMaterials"], "execution_count": 37, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["Cloning into 'FallDHCourseMaterials'...\n", "remote: Enumerating objects: 429, done.\u001b[K\n", "remote: Total 429 (delta 0), reused 0 (delta 0), pack-reused 429\u001b[K\n", "Receiving objects: 100% (429/429), 79.28 MiB | 27.46 MiB/s, done.\n", "Resolving deltas: 100% (200/200), done.\n", "Checking out files: 100% (163/163), done.\n"]}]}, {"cell_type": "code", "metadata": {"id": "zH9CahtfeJa8"}, "source": ["with zipfile.ZipFile('/content/FallDHCourseMaterials/stanza_data/hume.zip', 'r') as zip_ref:\n", "    zip_ref.extractall('/content')"], "execution_count": 38, "outputs": []}, {"cell_type": "code", "metadata": {"id": "JEJz-tDpdDix"}, "source": ["hume_doc = CoNLL.conll2doc('/content/hume/hume_output.conllu')"], "execution_count": 39, "outputs": []}, {"cell_type": "code", "metadata": {"id": "2Q1AvrZijwvN"}, "source": ["# gibbon = []\n", "\n", "# for chapter in soup_chapter.find_all('div', attrs={\"type\": \"textpart\", \"subtype\": \"chaptertext\"}):\n", "#   for word in chapter.get_text().split(' '):\n", "#     if len(gibbon) <= 1000000:\n", "#       gibbon.append(word)\n", "\n", "# len(gibbon)\n", "# gibbon_string = ' '.join(gibbon) \n", "\n", "# gibbon_doc = nlp(gibbon_string) ## Will take 35 minutes\n", "# CoNLL.write_doc2conll(gibbon_doc, \"gibbon_output.conllu\") ## exports data so we don't need to run this cell everytime"], "execution_count": 40, "outputs": []}, {"cell_type": "code", "metadata": {"id": "vqFvbdbjhAdd"}, "source": ["with zipfile.ZipFile('/content/FallDHCourseMaterials/stanza_data/gibbon.zip', 'r') as zip_ref:\n", "    zip_ref.extractall('/content')"], "execution_count": 41, "outputs": []}, {"cell_type": "code", "metadata": {"id": "2hYeQq7YmmIv"}, "source": ["gibbon_doc = CoNLL.conll2doc('/content/gibbon/gibbon_output.conllu')"], "execution_count": 42, "outputs": []}, {"cell_type": "code", "metadata": {"id": "mw7kvPspJGiv"}, "source": ["def compareGibbontoHume(gibbon, hume, search_word):\n", "  gib_dict, gib_list = findBigrams(gibbon, search_word)\n", "  hume_dict, hume_list = findBigrams(hume, search_word)\n", "\n", "  print(f'There are {sum(gib_dict.values())} instance(s) in Gibbon and {sum(hume_dict.values())} instance(s) in Hume.') \n", "  print('\\n')\n", "\n", "  print('Comparison:')\n", "  print('Gibbon', 'Hume', 'Bigram',sep='\\t')\n", "  for tup in sorted(gib_dict,key=gib_dict.get,reverse=True):    \n", "    if tup in hume_list:\n", "      hume_val = hume_dict[tup]\n", "    else:\n", "      hume_val = 0\n", "    print(gib_dict[tup], hume_val, tup,sep='\\t')"], "execution_count": 43, "outputs": []}, {"cell_type": "code", "metadata": {"id": "Tqz_uUulJdQ0", "colab": {"base_uri": "https://localhost:8080/"}, "outputId": "2744544a-00b3-498e-b550-3dfd59267551"}, "source": ["###########################################\n", "## Search Terms from reading ##\n", "  # searchs = 'balance' #Parker, p. 167\n", "  # searchs = 'temperate' #Parker, p. 167\n", "  # searchs = 'philosophic' #Parker, p. 168\n", "  # searchs = 'impartial'  #Parker, p. 168\n", "## Among others ##\n", "###########################################\n", "\n", "## (\u2283\uff61\u2022\u0301\u203f\u2022\u0300\uff61)\u2283\u2501\u2606\uff9f.*\uff65\uff61\uff9f Interactive function (\u25d5\u203f\u25d5\u273f) ##\n", "search_term = input(\"Enter search term:\")\n", "compareGibbontoHume(gibbon_doc, hume_doc, search_term)"], "execution_count": 44, "outputs": [{"output_type": "stream", "name": "stdout", "text": ["Enter search term:balance\n", "There are 171 instance(s) in Gibbon and 110 instance(s) in Hume.\n", "\n", "\n", "Comparison:\n", "Gibbon\tHume\tBigram\n", "23\t23\t('balance', 'the')\n", "8\t3\t('balance', 'power')\n", "6\t0\t('balance', ',')\n", "4\t1\t('balance', 'The')\n", "4\t0\t('inclined', 'balance')\n", "4\t0\t('balance', 'and')\n", "3\t1\t('balance', 'constitution')\n", "3\t7\t('balance', 'a')\n", "3\t3\t('balance', 'in')\n", "3\t1\t('destroyed', 'balance')\n", "3\t1\t('balance', 'to')\n", "2\t0\t('balance', 'only')\n", "2\t0\t('balance', 'or')\n", "2\t0\t('balance', 'at')\n", "2\t1\t('balance', ';')\n", "2\t0\t('balance', 'an')\n", "2\t0\t('balance', 'exact')\n", "2\t0\t('maintained', 'balance')\n", "2\t0\t('established', 'balance')\n", "2\t0\t('balance', 'nice')\n", "2\t0\t('balance', 'powers')\n", "2\t0\t('weighed', 'balance')\n", "2\t0\t('balance', 'If')\n", "2\t0\t('balance', 'we')\n", "1\t0\t('influence', 'balance')\n", "1\t0\t('form', 'balance')\n", "1\t0\t('balance', 'capable')\n", "1\t0\t('destroy', 'balance')\n", "1\t0\t('balance', 'must')\n", "1\t0\t('decide', 'balance')\n", "1\t0\t('balance', 'contest')\n", "1\t0\t('balance', 'advancing')\n", "1\t0\t('balance', 'favour')\n", "1\t0\t('balance', 'conferred')\n", "1\t0\t('balance', 'natural')\n", "1\t0\t('balance', 'money')\n", "1\t0\t('preserved', 'balance')\n", "1\t0\t('balance', 'freedom')\n", "1\t0\t('subsisted', 'balance')\n", "1\t0\t('maintaining', 'balance')\n", "1\t0\t('instituted', 'balance')\n", "1\t0\t('continued', 'balance')\n", "1\t0\t('balance', 'religions')\n", "1\t0\t('balance', 'ecclesiastical')\n", "1\t0\t('served', 'balance')\n", "1\t0\t('balance', 'affected')\n", "1\t0\t('overturned', 'balance')\n", "1\t0\t('custom', 'balance')\n", "1\t0\t('balance', 'imperfect')\n", "1\t0\t('balance', 'reason')\n", "1\t0\t('balance', 'fairly')\n", "1\t0\t('acknowledge', 'balance')\n", "1\t0\t('balance', 'merits')\n", "1\t0\t('trembles', 'balance')\n", "1\t0\t('balance', 'contains')\n", "1\t0\t('balance', 'peace')\n", "1\t0\t('incline', 'balance')\n", "1\t0\t('equal', 'balance')\n", "1\t0\t('balance', 'Vortigern')\n", "1\t0\t('balance', 'could')\n", "1\t3\t('ROOT', 'balance')\n", "1\t0\t('balance', 'perils')\n", "1\t0\t('balance', 'deserve')\n", "1\t0\t('balance', '.')\n", "1\t0\t('balance', 'Frisians')\n", "1\t0\t('balance', 'might')\n", "1\t0\t('blended', 'balance')\n", "1\t0\t('balance', 'space')\n", "1\t0\t('balance', 'equal')\n", "1\t0\t('firm', 'balance')\n", "1\t0\t('continue', 'balance')\n", "1\t0\t('balance', 'anxious')\n", "1\t0\t('harmony', 'balance')\n", "1\t0\t('balance', 'republic')\n", "1\t0\t('balance', 'West')\n", "1\t0\t('condescending', 'balance')\n", "1\t0\t('balance', 'arguments')\n", "1\t0\t('balance', 'justice')\n", "1\t0\t('is', 'balance')\n", "1\t0\t('balance', 'elude')\n", "1\t1\t('fixing', 'balance')\n", "1\t0\t('king', 'balance')\n", "1\t0\t('balance', 'which')\n", "1\t0\t('monarchies', 'balance')\n", "1\t0\t('balance', 'world')\n", "1\t0\t('balance', 'equitable')\n", "1\t1\t('balance', 'property')\n", "1\t0\t('balance', 'receipt')\n", "1\t0\t('balance', 'real')\n", "1\t0\t('balance', 'that')\n", "1\t0\t('balance', 'I')\n", "1\t0\t('balance', 'should')\n", "1\t0\t('expected', 'balance')\n", "1\t0\t('balance', 'faults')\n", "1\t0\t('balance', 'long-disputed')\n", "1\t0\t('division', 'balance')\n", "1\t0\t('observed', 'balance')\n", "1\t0\t('balance', 'political')\n", "1\t0\t('balance', 'Italy')\n", "1\t0\t('felt', 'balance')\n", "1\t0\t('balance', 'republics')\n", "1\t0\t('peace', 'balance')\n", "1\t0\t('disdains', 'balance')\n", "1\t0\t('balance', 'weight')\n", "1\t0\t('balance', 'measure')\n"]}]}, {"cell_type": "markdown", "metadata": {"id": "pGeAYsYrm3Pt"}, "source": ["## For next week: Consider how you can improve this model of comparison\n", "\n", "\n", "*   Case-sensitivity\n", "*   Remove punctuation\n", "*   Add other functionality from Dr. Crane's code (ex.Hume to Gibbon, not just Gibbon to Hume)\n", "*   How can we generate more relavant search terms\n", "*   Statistical relivance \n", "\n"]}]}